(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    583849,      11562]
NotebookOptionsPosition[    576704,      11433]
NotebookOutlinePosition[    577937,      11471]
CellTagsIndexPosition[    577866,      11466]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Dictionary attacks using Wolfram Language", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.770373672636671*^9, 
  3.7703737875292807`*^9}, {3.770505038555256*^9, 3.7705050581427317`*^9}, {
  3.770581105200593*^9, 3.770581105849065*^9}, {3.770581152904325*^9, 
  3.770581176574112*^9}},
 CellTags->"Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],

Cell["Miguel Angel (Mackaber) Bravo Vidales", "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.7705050610905437`*^9, 
  3.770505070752499*^9}},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell[CellGroupData[{

Cell["\<\
WARNING!!! This essay is only intended to be use for educational purposes, \
the data presented was obtained from real leaked databases and should be \
handled with discretion.\
\>", "Section",
 CellChangeTimes->{{3.770582855736044*^9, 3.770582900927908*^9}, {
  3.770582936424679*^9, 
  3.770582964270566*^9}},ExpressionUUID->"a5891ba3-5b02-47cc-a4cb-\
91cdc60b69d7"],

Cell["\<\
So, let\[CloseCurlyQuote]s suppose you suddenly got access to the database of \
a very popular site, as a Hacker you want to know the passwords of all of \
their users, but it turns out there isn\[CloseCurlyQuote]t anything in it \
that looks like passwords, all you have is a bunch of Hexadecimal numbers.\
\>", "Text",
 CellChangeTimes->{{3.770582993672922*^9, 3.770583009212472*^9}, {
  3.770583064153431*^9, 
  3.77058318424347*^9}},ExpressionUUID->"d7679580-e1df-41c0-baf3-\
435a0484516f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"db", " ", "=", "  ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/mackaber/WSS/Project/Homework/Res/pass_50000.txt\>\"", ",", 
     "\"\<Table\>\"", ",", 
     RowBox[{"\"\<FieldSeparators\>\"", "\[Rule]", " ", "\"\<:\>\""}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataset", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<hash\>\"", " ", "\[Rule]", " ", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<freq\>\"", "\[Rule]", " ", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}], "&"}], " ", "/@", 
    "db"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataset", "//", "Dataset"}]}], "Input",
 CellChangeTimes->{{3.770506111858902*^9, 3.77050614086978*^9}, {
  3.770506234388589*^9, 3.770506252455518*^9}, {3.77050628285811*^9, 
  3.7705062857261477`*^9}, {3.770506319837734*^9, 3.770506322314591*^9}, {
  3.770566458681422*^9, 3.7705664625739613`*^9}, {3.770583190707735*^9, 
  3.7705832272993298`*^9}},
 NumberMarks->False,
 CellLabel->"In[1]:=",ExpressionUUID->"8c18203f-f3dd-4649-bcce-6b334747f9bd"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 50000, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"hash", "freq"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 50000], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "hash"} -> 1, {All, "freq"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "hash" -> TypeSystem`PackageScope`AtomShape[384.00000000000006`],
               "freq" -> TypeSystem`PackageScope`AtomShape[34]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1235031031], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"hash", "freq"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 50000], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1235031031]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"hash\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"hash\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 472713085][{
                    All, "hash"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[All, "hash"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"freq\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"freq\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 472713085][{
                    All, "freq"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[All, "freq"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["7C4A8D09CA3762AF61E59520943DC26494F8941B", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[1, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["23174662"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[1, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["F7C3BC1D808E04732ADF679965CCC34CA7AE3441", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[2, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7671364"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[2, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["B1B3773A05C0ED0176787A4F1574FF0075F7521E", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[3, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3810555"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[3, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["5BAA61E4C9B93F3F0682250B6CF8331B7EE68FD8", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[4, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3645804"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[4, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["3D4F2BF07DC1BE38B20CD6E46949A1071F9D0E3D", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[5, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3093220"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[5, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["7C222FB2927D828AF22F592134E8932480637C0D", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[6, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2889079"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[6, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["6367C48DD193D56EA7B0BAAD25B19455E529F5EE", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[7, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2834058"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[7, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["20EABE5D64B0E216796E834F52D61FD0B70332FC", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[8, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2484157"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[8, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["E38AD214943DAAD1D64C102FAEC29DE4AFE9DA3D", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[9, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2401761"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[9, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["8CB2237D0679CA88DB6464EAC60DA96345513964", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[10, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2333232"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[10, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["01B307ACBA4F54F55AAFC33BB06BBBF6CA803E9A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[11, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2224432"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[11, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["601F1889667EFAEBB33B8C12572835DA3F027F78", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[12, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2194818"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[12, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["C984AED014AEC7623A54F0591DA07A85FD4B762D", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[13, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1942768"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[13, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["EE8D8728F435FD550F83852AABAB5234CE1DA528", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[14, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1593388"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[14, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["7110EDA4D09E062AA5E4A390B0A572AC0D2C0220", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[15, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1256907"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[15, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["B80A9AED8AF17118E51D4D0C2D7872AE26E2109E", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[16, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1141300"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[16, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["B0399D2029F64D445BD131FFAA399A42D2F8E7DC", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[17, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1081655"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[17, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["40BD001563085FC35165329EA1FF5C5ECBDBBEEF", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[18, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1023001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[18, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["AB87D24BDC7452E55738DEB5F868E1F16DEA5ACE", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[19, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["980209"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[19, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["AF8978B1797B72ACFFF9595A5A2A373EC3D9106D", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[20, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["968625"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
                 
                  GeneralUtilities`Slice[20, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    50000 (-20), {1, 50000 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 50000 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    50000, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 50000 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    50000 20, {1, 50000 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    50000 (-20), {1, 50000 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 50000 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    50000, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 50000 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    50000 20, {1, 50000 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 472713085}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 472713085}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 472713085}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 472713085}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 472713085}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 472713085][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 472713085]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[472713085][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {488., {279.634033203125, 285.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.770506052535899*^9, {3.7705061228763113`*^9, 3.770506142179549*^9}, {
   3.7705062376886597`*^9, 3.77050625378393*^9}, 3.7705062894169292`*^9, 
   3.770506323291402*^9, 3.770510336929491*^9, 3.7705677719282618`*^9, 
   3.770569528782981*^9, 3.7705832016165657`*^9, 3.770583270093858*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"affbc20f-1f05-4c53-b9ba-cb37a52a8f93"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["How passwords work?", "Section",
 CellChangeTimes->{{3.77058329130459*^9, 
  3.770583296992752*^9}},ExpressionUUID->"2571f773-98ab-43bf-b43d-\
15d8687c1651"],

Cell["\<\
When you first sign up to a website it usually asks you for a new password \
for your account, and you have to enter the same password each time you sign \
in, so... you would assume that this password is compared to the one stored \
in some kind of database. However, if the password is stored in plaintext it \
would be very easy for the programmer or anyone that has access to the \
database (maybe a hacker). Like in the example below, just looking at the \
code you can realize what the password is.\
\>", "Text",
 CellChangeTimes->{{3.7705833587366467`*^9, 3.770583453557119*^9}, {
  3.770583488946225*^9, 
  3.770583603830194*^9}},ExpressionUUID->"0f0e88ba-cbfb-4122-b300-\
4aeba7672b3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Panel", "[", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pass", "=", "password"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InputField", "[", 
        RowBox[{"Dynamic", "[", "pass", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", "pass", "]"}], " ", "===", " ", 
           "\"\<wolfram\>\""}], ",", "\[IndentingNewLine]", 
          "\"\<Access Granted!\>\"", ",", "\[IndentingNewLine]", 
          "\"\<Access Denied!\>\""}], "\[IndentingNewLine]", "]"}], "]"}]}], 
      "}"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.770583480217484*^9, 3.7705834813895617`*^9}, {
  3.770584223749071*^9, 3.770584224704957*^9}, {3.770594687861722*^9, 
  3.770594723024678*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"2a356148-76a0-4ac3-998a-0c95570812b6"],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{$CellContext`pass$$ = $CellContext`wolfram}, 
   TagBox[GridBox[{
      {
       InputFieldBox[Dynamic[$CellContext`pass$$]]},
      {
       DynamicBox[ToBoxes[
         If[
         ToString[$CellContext`pass$$] === "wolfram", "Access Granted!", 
          "Access Denied!"], StandardForm],
        ImageSizeCache->{78., {1., 8.}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   DynamicModuleValues:>{}]]], "Output",
 CellChangeTimes->{{3.7705947106122007`*^9, 3.7705947260196247`*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"40d889f0-d6b4-4b67-8eb7-a721a2dae193"]
}, Open  ]],

Cell[TextData[{
 "We need some kind of way to check if the password is correct every time is \
inputted, but storing it without knowing what it originally was. For this we \
make use of a ",
 Cell[BoxData[
  RowBox[{"Hash", "[", "]"}]], "Input",
  CellChangeTimes->{{3.770583947654477*^9, 3.770583950347147*^9}},
  ExpressionUUID->"05bde216-99d8-4422-bcfa-4d725385ad0c"],
 " function.\nHash functions are \[OpenCurlyDoubleQuote]one-way\
\[CloseCurlyDoubleQuote] functions, this means that we can convert the input \
to its hash, but we can\[CloseCurlyQuote]t take the hash and convert it back \
to its input. One of the algorithms used for hashing is known as SHA-1"
}], "Text",
 CellChangeTimes->{{3.770506898832629*^9, 3.770506939995487*^9}, {
  3.7705089474348593`*^9, 3.7705089516460648`*^9}, {3.770583813824421*^9, 
  3.770583844536462*^9}, {3.7705838839908133`*^9, 
  3.770584075216834*^9}},ExpressionUUID->"440eaf1e-ab4e-4d46-911e-\
a158414268e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hash", "[", 
  RowBox[{"\"\<wolfram\>\"", ",", "\"\<SHA\>\"", ",", "\"\<HexString\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7705069073369217`*^9, 3.770506908691543*^9}, {
  3.7705069424485273`*^9, 3.7705069735977993`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"c4f059a6-1e24-41ed-9f1e-4b81f9493c47"],

Cell[BoxData["\<\"a84c43b7866a06a6dd4c9d90e813abbd084f752c\"\>"], "Output",
 CellChangeTimes->{3.77050686594689*^9, 3.770506974001719*^9, 
  3.770584078518471*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"7d216dd0-8840-4677-9a42-4e1f02a22fa0"]
}, Open  ]],

Cell["\<\
This hash is then be stored  in a database,  but then, How do you know a \
password is correct? Easy!, each time you login the hash function is applied \
to the input, then its compared to hash stored in the Database, so now, even \
if the password is leaked the hackers can\[CloseCurlyQuote]t know the \
password of any account.\
\>", "Text",
 CellChangeTimes->{{3.770506983962841*^9, 3.770507041953148*^9}, {
  3.7705089593357353`*^9, 3.7705091124169073`*^9}, {3.770584102078848*^9, 
  3.7705842002627*^9}, {3.7705843023709183`*^9, 3.770584336845212*^9}, {
  3.770594744981207*^9, 
  3.77059476922865*^9}},ExpressionUUID->"a3f941ec-baeb-4ddc-bf4a-\
631fe377b6f1"],

Cell["Can You Guess the Following password now?", "Text",
 CellChangeTimes->{{3.770508554925867*^9, 3.770508584829095*^9}, {
  3.7705842076508923`*^9, 
  3.770584208100539*^9}},ExpressionUUID->"b60c090c-3139-4eaf-9fb1-\
930487346684"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Panel", "[", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pass", "=", "password"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InputField", "[", 
        RowBox[{"Dynamic", "[", "pass", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Hash", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "pass", "]"}], ",", "\"\<SHA\>\"", ",", 
             "\"\<HexString\>\""}], "]"}], " ", "===", " ", 
           "\"\<7c4a8d09ca3762af61e59520943dc26494f8941b\>\""}], ",", 
          "\[IndentingNewLine]", "\"\<Access Granted!\>\"", ",", 
          "\[IndentingNewLine]", "\"\<Access Denied!\>\""}], "]"}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}],
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7705075516349993`*^9, 3.770507551644208*^9}, {
   3.770507700437258*^9, 3.770507741859666*^9}, {3.770507829208387*^9, 
   3.770507865011944*^9}, {3.770507895334447*^9, 3.770508034682357*^9}, {
   3.7705080869577847`*^9, 3.770508088558326*^9}, {3.770508264003378*^9, 
   3.7705082679714947`*^9}, {3.7705083121465387`*^9, 
   3.7705083349095087`*^9}, {3.7705083740304832`*^9, 
   3.7705083744785357`*^9}, {3.770508481133189*^9, 3.770508485824073*^9}, {
   3.770508590214334*^9, 3.770508612282419*^9}, {3.770509875974578*^9, 
   3.770509878974659*^9}, {3.770509958010415*^9, 3.770509964927288*^9}, {
   3.770551784782002*^9, 3.770551814607733*^9}, {3.77055215518816*^9, 
   3.7705522633397293`*^9}, 3.7705523728310833`*^9, {3.7705574464237003`*^9, 
   3.770557474713203*^9}, {3.77059387585469*^9, 
   3.770593892539378*^9}},ExpressionUUID->"f6acc7ea-7a54-43a3-91d8-\
1b29c7dd2bd2"],

Cell[BoxData[
 PanelBox[
  DynamicModuleBox[{$CellContext`pass$$ = 123456}, 
   TagBox[GridBox[{
      {
       InputFieldBox[Dynamic[$CellContext`pass$$]]},
      {
       DynamicBox[ToBoxes[
         If[Hash[
            ToString[$CellContext`pass$$], "SHA", "HexString"] === 
          "7c4a8d09ca3762af61e59520943dc26494f8941b", "Access Granted!", 
          "Access Denied!"], StandardForm],
        ImageSizeCache->{78., {1., 8.}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   DynamicModuleValues:>{}]]], "Output",
 CellChangeTimes->{
  3.770508614150466*^9, {3.7705099445087748`*^9, 3.770509965627452*^9}, {
   3.7705517943826*^9, 3.770551812987142*^9}, 3.770557475708365*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"b7cc634e-2f5b-434f-ae5f-17af38cd6d81"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dictionary Attacks", "Section",
 CellChangeTimes->{{3.770584269264656*^9, 
  3.770584279582987*^9}},ExpressionUUID->"04ad1cb8-c08f-425e-aa40-\
50ce70ce3953"],

Cell[TextData[{
 "Having the passwords hashed in a database  doesn\[CloseCurlyQuote]t \
necessarily mean we can\[CloseCurlyQuote]t crack the passwords, because as we \
know, a lot of people in the world may be using something related to them as \
a password,  as it needs to be something easy to remember, sometimes it may \
be a common word, a given name or other kind of stuff that can be found in a ",
 Cell[BoxData[
  RowBox[{"WordList", "[", "]"}]], "Input",
  CellChangeTimes->{{3.7705845246873713`*^9, 3.770584528415246*^9}},
  ExpressionUUID->"34eda24c-1148-460e-b854-4b92c7025b67"],
 "Like the following built-in function"
}], "Text",
 CellChangeTimes->{{3.770509135749444*^9, 3.770509266125908*^9}, {
  3.77058439029322*^9, 
  3.770584546847261*^9}},ExpressionUUID->"3bf51dd4-e70b-4c66-a3ee-\
5ed1d5f6bb8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"WordList", "[", "]"}], "//", "Dataset"}]], "Input",
 CellChangeTimes->{{3.7705092604000072`*^9, 3.770509269516474*^9}, {
  3.770557489907745*^9, 3.770557496872408*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"1ab59e0d-6d21-4bef-9d3f-002c4b7e8541"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 80, "Length" -> 39176, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Atom[String], 39176], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`MulticolumnShape[
          9794, 4, 153.60000000000002`], 80, {All}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1411673161], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Atom[String], 39176], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1411673161]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation["a", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[1]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["aah", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[2]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["aardvark", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[3]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["aback", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[4]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abacus", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[5]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abaft", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[6]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abalone", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[7]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abandon", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[8]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abandoned", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[9]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abandonment", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[10]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abase", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[11]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abasement", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[12]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abash", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[13]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abashed", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[14]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abashment", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[15]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abate", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[16]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abatement", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[17]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abattoir", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[18]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abbe", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[19]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abbess", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[20]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abbey", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[21]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abbot", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[22]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abbreviate", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[23]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abbreviated", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[24]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abbreviation", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[25]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abdicate", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[26]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abdication", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[27]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abdomen", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[28]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abdominal", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[29]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abduct", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[30]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abducting", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[31]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abduction", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[32]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abductor", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[33]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abeam", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[34]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abed", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[35]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["aberrant", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[36]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["aberration", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[37]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abet", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[38]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abettor", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[39]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abeyance", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[40]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abhor", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[41]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abhorrence", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[42]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abhorrent", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[43]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abidance", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[44]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abide", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[45]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abiding", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[46]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["ability", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[47]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abject", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[48]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abjection", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[49]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abjectly", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[50]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abjuration", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[51]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abjure", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[52]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["ablate", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[53]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["ablated", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[54]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["ablation", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[55]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["ablative", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[56]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["ablaze", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[57]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["able", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[58]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abloom", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[59]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["ablution", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[60]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["ably", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[61]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abnegate", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[62]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abnegation", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[63]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abnormal", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[64]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abnormality", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[65]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abnormally", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[66]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["aboard", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[67]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abode", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[68]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abolish", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[69]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abolition", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[70]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abolitionism", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[71]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abolitionist", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[72]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["abominable", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[73]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abominably", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[74]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abominate", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[75]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abomination", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[76]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Pane[
                 Annotation["aboriginal", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[77]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["aborigine", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[78]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abort", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[79]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}], 
               Item[
                Pane[
                 Annotation["abortion", 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1721919005][
                   GeneralUtilities`Slice[80]], "Mouse"], 
                 ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], Frame -> {{
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                   Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]}, Inherited}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    39176 (-80), {1, 39176 - -80 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 80, {
                    1, 39176 - -80 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 80, " of ", 
                    Style[
                    39176, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 80, {
                    1, 39176 - 80 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    39176 80, {1, 39176 - 80 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    39176 (-80), {1, 39176 - -80 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 80, {
                    1, 39176 - -80 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 80, " of ", 
                    Style[
                    39176, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 80, {
                    1, 39176 - 80 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    39176 80, {1, 39176 - 80 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1721919005},
                     1, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1721919005},
                     10, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1721919005},
                     30, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1721919005},
                     100, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1721919005},
                     100000000, {All}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1721919005][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1721919005]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1721919005][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1721919005][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[
         TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {673., {268.634033203125, 274.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.770509270941*^9, 3.7705574973854427`*^9},
 CellLabel->
  "Out[257]=",ExpressionUUID->"2757c7c1-a460-4434-8fb7-ad830224b8e2"]
}, Open  ]],

Cell["\<\
ThereIf we apply The Hash Function to each one of these words we can have a \
dictionary to compare our database to!\
\>", "Text",
 CellChangeTimes->{{3.7705092604000072`*^9, 3.770509329101212*^9}, {
  3.770509373012805*^9, 3.770509383829863*^9}, {3.7705845680245647`*^9, 
  3.77058458173*^9}},ExpressionUUID->"acd75588-c93f-4b0d-ad33-f3c0ab031196"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HashList", "[", "wordlist_List", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<word\>\"", " ", "\[Rule]", " ", "#"}], ",", 
      RowBox[{"\"\<hash\>\"", " ", "\[Rule]", " ", 
       RowBox[{"ToUpperCase", "@", 
        RowBox[{"Hash", "[", 
         RowBox[{"#", ",", "\"\<SHA\>\"", ",", "\"\<HexString\>\""}], 
         "]"}]}]}]}], "|>"}], "&"}], " ", "/@", 
   "wordlist"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HashList", "[", 
   RowBox[{"WordList", "[", "]"}], "]"}], "//", "Dataset"}]}], "Input",
 CellChangeTimes->{{3.7705093860292377`*^9, 3.770509422898233*^9}, {
  3.770509761700465*^9, 3.770509765344833*^9}, {3.7705101787770367`*^9, 
  3.7705101801791477`*^9}, {3.77051029796546*^9, 3.7705103027343616`*^9}, {
  3.7705107237482777`*^9, 3.7705107272376738`*^9}, {3.770510949588689*^9, 
  3.77051109367424*^9}, {3.770536925659973*^9, 3.770537030693769*^9}, {
  3.770537155031137*^9, 3.770537201566369*^9}, {3.770538898787176*^9, 
  3.770538900105558*^9}, {3.7705684562524977`*^9, 3.7705684807737303`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"afefa9c4-cdc6-417a-b145-83e038410b79"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 39176, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"word", "hash"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 39176], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "word"} -> 1, {All, "hash"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "word" -> TypeSystem`PackageScope`AtomShape[153.60000000000002`],
               "hash" -> TypeSystem`PackageScope`AtomShape[
               384.00000000000006`]]]], 20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[439488087], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"word", "hash"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 39176], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[439488087]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"word\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"word\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 521282412][{
                    All, "word"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[All, "word"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"hash\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"hash\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 521282412][{
                    All, "hash"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[All, "hash"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["a", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[1, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["86F7E437FAA5A7FCE15D1DDCB9EAEAEA377667B8", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[1, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["aah", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[2, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["714A417A8A1B4CFC113088608DE9253E99BB0FF5", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[2, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["aardvark", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[3, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["FF49ABCA9701606B01B6245D587D26C31B63A433", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[3, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["aback", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[4, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["656AFDA9217251323902917357FABAEB6D475A22", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[4, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abacus", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[5, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C0A20267F9F1E4469F8EB7BF45704218293412DB", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[5, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abaft", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[6, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["6D52BA2A5FC3A963DF95BB9A4449FF50B1B81194", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[6, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abalone", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[7, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["B4EB0604BA82485D494FBC5FD8365509F36EE259", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[7, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abandon", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[8, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["F930859E3099495023C7F4C15223E146E3FB6FDD", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[8, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abandoned", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[9, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["8F53ED0FEC22D3282D0E70911E563402B8429CFC", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[9, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abandonment", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[10, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["9942B261A9138D9423271AD0DDA0D1AD84BCA9B4", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[10, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abase", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[11, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["46DE45E9D71A27E2D4E86FF64B2292FB5C77BAC8", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[11, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abasement", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[12, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["CE6167D21BE907ADB110E65B405F8A8EDF388742", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[12, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[13, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["F077A6C61FE03EF89E117086297BF7539D25AA7C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[13, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abashed", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[14, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["44F27607C2990D56196ED9D54482A27A94181E84", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[14, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abashment", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[15, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["CCD5087D9869FD2AAB872C80C3D43F1105343926", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[15, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abate", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[16, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["4ABC4EA0D4E98579A75DD1A2A005481A1C1E527A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[16, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abatement", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[17, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["67E11EDE1F94F02150E2A914EC07D4363AB8FC02", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[17, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abattoir", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[18, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["7A49459E4C7FCBA827F22A25FE506BAA6D011737", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[18, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abbe", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[19, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["900632677B332326C97B82E01E9BD199A5ADAFAE", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[19, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["abbess", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[20, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["8581D21312A4EC34D96BCE4ECA98A879C684878A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
                 
                  GeneralUtilities`Slice[20, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    39176 (-20), {1, 39176 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 39176 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    39176, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 39176 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    39176 20, {1, 39176 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    39176 (-20), {1, 39176 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 39176 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    39176, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 39176 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    39176 20, {1, 39176 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 521282412}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 521282412}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 521282412}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 521282412}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 521282412}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 521282412][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 521282412]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[521282412][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {578., {279.634033203125, 285.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.770585193352189*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"63fe5c02-8223-4b5a-9c24-c517eab7fd59"]
}, Open  ]],

Cell[TextData[{
 "Now that we have our dataset with the most common words, the only thing \
left to do is to see which of the values appear in the leaked database, and \
voila!, we have our passwords for the words found in ",
 Cell[BoxData[
  RowBox[{"WordList", "[", "]"}]], "Input",
  CellChangeTimes->{{3.7705092604000072`*^9, 3.770509269516474*^9}, {
   3.770557489907745*^9, 3.770557496872408*^9}},ExpressionUUID->
  "3798de2a-9046-4b8a-9646-c0db434ce7db"],
 " "
}], "Text",
 CellChangeTimes->{{3.770509443495579*^9, 3.77050950095761*^9}, {
   3.770510195114356*^9, 3.770510275667844*^9}, {3.770585264453658*^9, 
   3.77058530554417*^9}, {3.770585389929757*^9, 3.770585503657754*^9}, 
   3.770585556266247*^9},ExpressionUUID->"a5b80379-22d0-4197-b0da-\
7a7fc9755ee4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DictionaryAttack", "[", 
   RowBox[{"dict_List", ",", "database_"}], "]"}], ":=", " ", 
  RowBox[{"JoinAcross", "[", 
   RowBox[{
    RowBox[{"HashList", "[", "dict", "]"}], ",", "database", ",", 
    RowBox[{"Key", "[", "\"\<hash\>\"", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DictionaryAttack", "[", 
   RowBox[{
    RowBox[{"WordList", "[", "]"}], ",", "dataset"}], "]"}], "//", 
  "Dataset"}]}], "Input",
 CellChangeTimes->{{3.770586982204483*^9, 3.770586999977264*^9}, {
  3.770587062825047*^9, 3.770587092583426*^9}, {3.770587512717366*^9, 
  3.770587564393561*^9}, {3.77058781474898*^9, 3.770587822778049*^9}, {
  3.770587860297289*^9, 3.770587864971836*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"f82791ff-77a2-4522-891d-413e59aa07b4"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 3898, "InitialType" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"word", "hash", "freq"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 3898], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "word"} -> 1, {All, "hash"} -> 1, {All, "freq"} -> 
           1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "word" -> TypeSystem`PackageScope`AtomShape[86.4], "hash" -> 
              TypeSystem`PackageScope`AtomShape[384.00000000000006`], "freq" -> 
              TypeSystem`PackageScope`AtomShape[34]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[2130613582], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"word", "hash", "freq"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 3898], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[2130613582]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"word\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"word\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1775787768][{All, "word"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[All, "word"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"hash\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"hash\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1775787768][{All, "hash"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[All, "hash"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"freq\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"freq\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1775787768][{All, "freq"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[All, "freq"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["password", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[1, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5BAA61E4C9B93F3F0682250B6CF8331B7EE68FD8", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[1, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3645804"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[1, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["monkey", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[2, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["AB87D24BDC7452E55738DEB5F868E1F16DEA5ACE", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[2, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["980209"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[2, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["dragon", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[3, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["AF8978B1797B72ACFFF9595A5A2A373EC3D9106D", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[3, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["968625"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[3, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["tinkle", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[4, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["31F2BFCCE79E11BDE1574CC1C9C8F97A7129A4CB", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[4, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["585933"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[4, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["computer", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[5, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C60266A8ADAD2F8EE67D793B4FD3FD0FFD73CC61", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[5, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["479689"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[5, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["princess", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[6, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["775BB961B81DA1CA49217A48E533C832C337154A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[6, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["476819"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[6, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["football", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[7, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2D27B62C597EC858F6E7B54E7E58525E6A95E6D8", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[7, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["425104"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[7, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["sunshine", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[8, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["8D6E34F987851AA599257D3831A1AF040886842F", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[8, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["405578"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[8, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["love", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[9, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["9F2FEB0F1EF425B292F2F94BC8482494DF430413", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[9, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["343076"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[9, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["shadow", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[10, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ED9D3D832AF899035363A69FD53CD3BE8F71501C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[10, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["337239"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[10, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["superman", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[11, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["18C28604DD31094A8D69DAE60F1BCD347F1AFC5A", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[11, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["333139"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[11, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["baseball", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[12, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A2C901C8C6DEA98958C219F6F2D038C44DC5D362", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[12, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["316837"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[12, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["killer", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[13, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["59033478180D07080D5E4F3BAA0099996C364162", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[13, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["314185"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[13, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["master", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[14, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["4F26AEAFDB2367620A393C973EDDBE8F8B846EBD", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[14, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["309984"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[14, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["soccer", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[15, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5C17FA03E6D5FC247565E1CD8FFA70E1BFE5B8D9", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[15, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["305500"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[15, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["lovely", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[16, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["DE3460832EA070EFFABBC7032D7594BBDE1BB120", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[16, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["267306"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[16, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["hello", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[17, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["AAF4C61DDCC5E8A2DABEDE0F3B482CD9AEA9434D", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[17, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["249946"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[17, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["hunter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[18, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["6E2F9E6111E77EDD0C446EA7A84E25323D137A61", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[18, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["242877"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[18, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["welcome", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[19, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["C0B137FE2D792459F26FF763CCE44574A5B5AB03", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[19, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["239332"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[19, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["apple", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[20, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["D0BE2DC421BE4FCD0172E5AFCEEA3970E2F3D940", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[20, 
                   Key["hash"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["227431"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
                  GeneralUtilities`Slice[20, 
                   Key["freq"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    3898 (-20), {1, 3898 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 3898 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    3898, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 3898 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    3898 20, {1, 3898 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    3898 (-20), {1, 3898 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 3898 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    3898, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 3898 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    3898 20, {1, 3898 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1775787768},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1775787768},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1775787768},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1775787768},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1775787768},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1775787768][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1775787768]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1775787768][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {577., {279.634033203125, 285.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.770587854133655*^9, 3.7705878733296633`*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"2d1d53d2-fe6d-45bd-a040-bf3a2da38303"]
}, Open  ]],

Cell[TextData[{
 "What we just have done is known as a ",
 StyleBox["Dictionary Attack", "Item"],
 ", and is used by Cybersecurity professionals to audit password databases \
(and is also used by some malicious hackers)."
}], "Text",
 CellChangeTimes->{{3.770585562419319*^9, 
  3.770585564507661*^9}},ExpressionUUID->"c9c88dd1-5a72-49db-af33-\
82154a1eb36e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Weak passwords", "Section",
 CellChangeTimes->{{3.7705853571887007`*^9, 
  3.770585368310689*^9}},ExpressionUUID->"9c4f90df-364e-4f26-8062-\
ea64adc05428"],

Cell[TextData[{
 "As you may have noticed, I was cheating a little, because the database we \
are working with doesn\[CloseCurlyQuote]t include usernames, and instead has \
a field called \[OpenCurlyDoubleQuote]freq\[CloseCurlyDoubleQuote] which \
stands for Frequency, which is the number of a password appearing in this \
database, that\[CloseCurlyQuote]s because I got it from ",
 ButtonBox["https://haveibeenpwned.com/ ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://haveibeenpwned.com/"], None},
  ButtonNote->"https://haveibeenpwned.com/"],
 "which has compiled this database from different security breaches, and \
hashing the passwords as some of them contained sensitive information."
}], "Text",
 CellChangeTimes->{{3.7705853315221367`*^9, 3.770585338603602*^9}, {
  3.7705855747823267`*^9, 3.770585577599646*^9}, {3.770585804364283*^9, 
  3.77058580588408*^9}, {3.770585933452846*^9, 3.770586014825046*^9}, {
  3.7705860571667643`*^9, 3.7705862396376047`*^9}, {3.770586499614797*^9, 
  3.7705864996165123`*^9}, {3.7705949777363043`*^9, 
  3.770595022273662*^9}},ExpressionUUID->"09ad4a52-4eb6-4a09-a087-\
561d02d21368"],

Cell[TextData[{
 "The main purpose of this site is inform people to stop using weak passwords \
that are vulnerable to dictionary attacks, the list we obtained is useful to \
know which passwords are the most used and therefore most insecure, but \
having it doesn\[CloseCurlyQuote]t make it very easy to read, so the message \
could be better understood by using a ",
 Cell[BoxData[
  RowBox[{"WordCloud", "[", "]"}]], "Input",
  CellChangeTimes->{{3.7705866309588537`*^9, 3.7705866329070807`*^9}},
  ExpressionUUID->"53727d35-b792-4dda-8c80-f93d2e8c4737"]
}], "Text",
 CellChangeTimes->{{3.770586287726203*^9, 3.770586327653283*^9}, {
  3.770586515206317*^9, 3.770586636702507*^9}, {3.770595058479105*^9, 
  3.770595059045143*^9}},ExpressionUUID->"9a7341f9-3007-4272-9fc0-\
bbac82bdb42f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PasswordCloud", "[", 
   RowBox[{"list_List", ",", "database_"}], "]"}], " ", ":=", " ", 
  RowBox[{"WordCloud", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<word\>\"", "]"}], "\[Rule]", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"#", "[", "\"\<freq\>\"", "]"}], "]"}]}], "&"}], "/@", " ", 
     RowBox[{"DictionaryAttack", "[", 
      RowBox[{"list", ",", "database"}], "]"}]}], "|>"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PasswordCloud", "[", 
  RowBox[{
   RowBox[{"WordList", "[", "]"}], ",", "dataset"}], "]"}]}], "Input",
 CellChangeTimes->{{3.770586791707148*^9, 3.770586792687273*^9}, {
  3.770586842662732*^9, 3.770586931398694*^9}, {3.770587884420549*^9, 
  3.7705879220219*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"a4d84ebc-a9bd-482b-b3c1-f62064a0a852"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"password\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.23411371237458192`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"monkey\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0835356239831369],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-6., -31.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"dragon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08288124979053581],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., 35.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"computer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05526150702175077],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-12., -49.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"princess\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05509938220020682],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {8., 53.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"sunshine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051075014809401034`],
     FontColor->RGBColor[1, 0.75, 0]], {0., -66.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"superman\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04698297301573475],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-6., 68.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"tinkle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06126317585105931],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {62., 28.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"football\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05217802849074849],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-66., 29.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"shadow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04721457990365468],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {65., -31.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"baseball\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04606208143357116],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-58., 48.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"basketball\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04060932092863286],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {55., -53.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mustang\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03933971975643764],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {64., 44.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"chocolate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04013141988672979],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {0., 80.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"whatever\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0388985368796926],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {0., -80.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"welcome\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041683863909611624`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-76., -28.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"butterfly\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03958725667908767],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {49., 66.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"master\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04567495899383573],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-55., -62.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diamond\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03792979870385385],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-72., -42.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"freedom\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04047058275382034],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {56., -66.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"jasmine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03884634059568333],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-60., 63.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"arsenal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03828110681018899],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-51., -75.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"batman\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03963804072597548],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-5., -92.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"snoopy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037872405387237594`],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {45., -79.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"purple\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04087018936970951],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-45., 80.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"scorpion\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03409241150792977],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {0., 92.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"elephant\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034102523125719444`],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {48., 80.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"midnight\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03411314314887285],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-48., -88.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"beautiful\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034276454249598826`],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {36., -94.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"christian\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037405124368487926`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {43., 91.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"orange\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038836906851711955`],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-40., 94.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pepper\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03903925218647518],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-2., -104.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"precious\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03376183504253771],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {0., 104.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"veronica\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03398841436630524],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {90., 54.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mother\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0409755987484555],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {106., 27.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lovely\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04326410075904384],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {101., -44.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hockey\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03668889418996676],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-96., -55.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"monster\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03667974289341968],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {42., 102.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"forever\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03938349910720299],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-47., -100.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nothing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03485321189000431],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-82., 75.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cookie\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038763244563456443`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {90., 65.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"phoenix\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03433876215139778],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-104., 42.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"playboy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03455941007925515],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {37., -106.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"marina\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03967340314349691],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-40., 105.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hunter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04188411913343507],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {111., -27.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"school\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03774134978236583],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {106., 39.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rainbow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03628555926807693],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {4., 115.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thunder\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034318708384273006`],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {84., -78.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"golfer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04042595606078211],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-88., -72.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"apple\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04101158255031038],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-109., 28.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ginger\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03836719678511337],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-100., 56.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"martin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038663710091135735`],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {87., 76.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"slipknot\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.036119706140532316`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {99., -63.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"chicken\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03657371213034024],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {0., -119.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"banana\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03681350999356465],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-41., -113.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"maverick\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.033468146210758276`],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-81., 89.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"soccer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.045421660143730135`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {78., -93.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"buster\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04068207938513063],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-114., -38.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"love\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.047544309026773854`],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {39., 114.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"heather\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035061997026041396`],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-36., 117.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cheese\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037431787405341144`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-88., -87.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"yellow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03750019617150482],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {86., 88.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"matrix\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03776919909840108],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-8., 125.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"heaven\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03395062290093489],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {40., -118.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dolphin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034068685924289195`],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-78., 101.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"secret\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04094842730623856],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {74., -106.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nirvana\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035505213524241346`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {82., 100.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"family\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03901501819747087],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {26., 127.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"killer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.045912271319726375`],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-82., -101.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"flower\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04005419876092819],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-10., -130.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"destiny\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03548210932493421],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {72., 111.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"peanut\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03715312477653407],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {28., -130.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bailey\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037331575059202135`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-44., -127.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"junior\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038813746162919965`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-117., 68.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hello\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.042283443301899946`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-40., 129.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"summer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04008639776729755],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {0., 139.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"angel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038020690284991214`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-70., 115.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"genius\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.033523392926949905`],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-77., -114.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"money\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03511244213602006],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {60., 124.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"crystal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.033922321669020775`],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {126., 53.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"jasper\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03499087676460452],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-120., -66.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cherry\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.033613380676329525`],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-130., -49.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"spider\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03422679999240819],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {124., 65.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"prince\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03695942233295421],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {75., -119.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"scooter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03546600982174953],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-14., -141.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"muffin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03361970749863368],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {134., -38.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"music\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03448275384830214],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {118., -74.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bandit\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03566976739363421],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {120., 77.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"winner\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.033444816053511704`],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {39., 138.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cooper\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03358293284399078],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {22., -142.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"guitar\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03412381966151111],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {133., -50.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tennis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03492902077868445],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-118., 80.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"august\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.033467750784364265`],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {116., -87.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"beauty\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03353147092328467],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {63., -131.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"silver\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03646124156598692],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-133., 51.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"friend\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034921790124622556`],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-69., 127.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"success\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03498014376248141],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-43., 141.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"victor\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03518474867663896],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {-121., -80.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pretty\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03445422665844859],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {-74., -126.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"user\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038828376939498324`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {136., 39.},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-149.5, 149.5}, {-148.5, 145.5}}]], "Output",
 CellChangeTimes->{
  3.770586843791451*^9, 3.7705869414776154`*^9, {3.770587911568738*^9, 
   3.770587935090397*^9}},
 CellLabel->"Out[37]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
RfnZPd4Bj94Ymgkk+7gGq2DKuwFLZQ7cSs2cwNZLYG8phIuiP+Mq7uFG2Fsr
iRZwxjJd/QiKvRvh9wTm3JdBfOzTsOcf59t5kBkQ2KOehL30OlzVa2E+9xzc
QxXwaeWkvvtgvUJ8sr+f6v4TxDfVkFLPplj8Q7h6aoh6COBT0UfaA3cfCW+7
gzWaq+RT8qTFcFVsgeXaW4Rd7728Rbx6A4v61qLZu1Evc2C6dBQ3l9dhRugI
ot4qUiNxeTWaC5TQjcgRv7IGI6M2mOhvppnEtTUoS5iCjxRZ6e56lMZNU450
o2hbHbLOD7PUPBhoGi624dauXkKXj1Dfjdi1zZhVuXnUPwlZXj1Jk/PIX3ED
TafyUbcrATmfXKeYLmFb0LT3oHjxFVSQsmw7l4OCBZdRe6GWkTvsqlDN51Eo
WncLXdHlaNidiJx50RD3a3m5cRPZn11B6cZENJ/OQdGiyyjfXUD01I/RmHwU
rsudQ71aiiLKDdIxLaYyKuncqyheG4eu2wNMwuNM8yiL/hNN1Xjqdj4iR6bR
QIz1w6wcLG/oJxHnxvGqcrxbUocahQp5w/344+1sZEi0sNv1eCc9Gwe6xzGg
1uBGWyNez6uE1uXCnppS7OydDKH/amMt9vdNQmnSYXlxAVY1dmOCUt6B6jJ8
UNkJViqQ8lmSm4N9fVNhd8H/QZIr01CFvwjZsueh2v8ZZsP/APmKV2EfF1Hr
Zqg2vQRDWVNohKzZRyFf9BTUR5dAtZ3OXf0GHBPcypc5Zjmknz0OQ14GvMoe
Cu6/hHL7p3BrSfL67dAd+Qtk838N+4T0bvj/FvaSq6F1AMordOwZ2MtiidlI
4MxbDOu1F2C58gLRkd+ROzxELjjwFfCvhU+QTPTje3T+y9SmNfoNkvnWyD/S
99+RN5PlXBJYLz8ER20ase06Nui7Rod4l3yc8oobohYhEtfUouL6JNRSG+Qt
YtYHpiQuOFV63F5XjfTDfZBNmaASaFF1vAUxnzdCJndg6HY/ybRmaC2kCIiw
ZG4krbmkBl21WtZM/cm9SAjvhN0TwFT5GG4srEZ9uhAqoQmjFILjFlegOpcD
dEdcN6LnVyJ9fxeGGpWwWHkm9w3YJUpMVw9htn8SvZElaLtcBkmf/A6pfC9M
k0L0RpWj41o5JmvG4HIGaTblQ6UKoym15CeF6LpRB/mQkl3aZKaipfV9kA9I
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
6WaBHuW+mJ13uASuYQVcGcmVXAJoNo/5D7PVIWhEt/0DeFN0Dk1SrTKLsDH4
Rm4ZXLKfkSB5/FwuXzI1+zuYLvgtJRS0NrUj7O8DFz+h2ZWLLmtQfp3LF/PG
GBPT16YQAF3y3nIaSK+Q/YLSoRZzeLy9NxtFbWYmrCRy+SJ8/bPI1lnYvN3m
Qll1D05FluJtfvLNIxAUlyINuS+hTXXJGnsuCKvViZLKbhy/WoK3NieO81ws
jghxM/IO67t6MH9d3Bh7Y97WTPQ5g3JYX31po6S9TVCrb6GkvpWSHSbtcHF2
LQ9tUKNPVt+kf8EADp7I4LaLRqPcREs85JHnFhnF7RjNNjDTOL7KoEFfwOnE
ul0JmL5GK9xmbklH3ZD39tE37MGO4+l8fmo1LrZWr0GfsY/UuLWxGql2m+hj
RLfkcAERifI6ORkVY9G3Kh4pTRYN+twWK3fzKeeDd/LXYXHD68+WIqOqDwab
l+WeSG6tL0KhEPd5N0eTjVBYVd+L6+n12M5yCTYnidkVsZqjVr5zzGE+4BFf
QXjeQmisqOtBZFo9th3PwZv0vBRfpHme+MSsLRloNvpkjS0zrUrWPJWlisHH
p6v5MZaESjvz8wiam9zu9eVxuFzYp1kqltx04lIud/DK762obnJ/KSTUQkbZ
OlwVLBFUQfXR/IVItR4gSalkFHQ6xcwS0eF+MoN5IjT6zOurSDVsstw+Mlnk
ypFUzYEA6++N1UkobLfJEPJbrVjJKGL134XMd8ILYPQryCwprh1DkCwuMaZO
sKskZ0wVYxYrBJgJzOde7q1k4a/zt6Rg09kSXE5vRlJhJ0oaB9A5YIPF4YWH
JUUPK27GL4Lr10VWxlKhbHYXahp0uMHgdiIHCwluM8RgezH0/V55R2MRni4E
W3xV6oL4LuOflYT4yNR6bDmWTYhN5Kdx43VBSu7JnB4NK2WHY4dFtqYc3sXK
h21ypjTzBh5UewMF/8Waqw0aM83vdmCV6MZXs0mmJXbZldL/vc0dmL1Wqymy
/lZcrOPmkgLaACIu5vBYT40HcVMqKvo9CmhZcPhVrV+HsV0Wa6be5VsF7TCZ
fev3JnBrXD1uGCnX9YNeJXvQ78KmI9rjiP8F0NZUNyF0FGgZECOr1K8jBHlf
j+bHBYw/CezpfiURZbkQDsrOslhgHkuJeHdXOjadKsSJuFrE5HegusMIq8sv
77Su5eb4fUjED8t70umMSMxpxq5TeSJ2hSBaVdrGfeI7sClNpTdafamWRUI+
qOqlp8eA+Kwm7DiRyxlumJYCRvfCKGFjJD9zlwskmI14b1OCxnXOjnfTm7Ss
krvBogoZwjW61ALSpfTeYRnFg+1dmDsKnVwdPcHVURnFXocNy7ZpVVLW37zt
WdARmtQoPjoKxZwqtgkRyw+L7dISymW3lZoaoyoGvySKHYTiRA2Kuegj0dWk
9/1fo5hpurPG+HZiEZEtRM1KQUCMCaWkVmPuGs5u75NRLCZ1rVEys4Rg3Xgs
3JaKbRfKkVUziOa6Lry55vMR+4AoBu1WO5Iy63mM3Nz18WIql4wxKT2HxU4z
xh+yNgGHE1t43K7UhdVkQ3x6HVYfzOA5ilIW1+gu1ghdsKino2ntPDxEOhOp
VSmlGg5Je9LrCMiLXF8yth1zlhd1OVV7wnIsKseIf4aZo2L4s1zffiSIiPPZ
WnVidQLSGiyqzfh8rM4hrLaosJqVWCHndqixGl35v4vVkE3pqO3/P+e4LY3j
Y/WYiNW7xc6bG7uxigzjN4R8uAdFHVZKSmOuyxD6/5vbUlgA/ninNfeLy+Nx
uhCfUo33tiZxO1Fkdw+KGJJC78MIhmtOl6Ks3Syu1Z1w2R2ITqjCO1vER1eP
+yiLKd5wrhyVXVZNuMKFa0LYhXJaGoOlp6r4ebe0bnbDINdSQzVaaizOixHv
yrUJwpkOg4va98E01Ywmq8xSc9KrxpzHs6nvSWi7JfjNJvg1m28OP9bfyfze
/1X4hRFZNqhZpc+JTeGpfy/8lhwqIImjZpUdN4WflIrqcbiQlFGLD7cnj86r
FdPMRA4vRq6Mxw+l6MVWkvQr9ghJtSFr4h7gTYWUTnU655LdGTie2IjaLgur
2SdlrTU2dOLTXcmifhGvfVqM/adJvLsnE6dSmtHQY2OKnRQcFfQ4sWZnkkbZ
50FepOKqudswOzcbR+9cTnpiQCWJPXYrPtoyShJzCZvBfdQSDIc6ezBnVEQQ
g8Pi/YU8KkqBYRDHL2uNLyHKKgWlve4vhOGRrO4vBcMRlxMb9wvZff/HEltw
IuWgyxqQu62tbhmjdzKIHc3RqaBzP5xkuBSWdyDiajHe2Z4iVB9YGSMrnFJi
dZiS8j3hgXGgKClwDXUdmLeBhwBPEBI27xYO7FcreUZzNibhYzFjvqTZALsn
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
Jy5TUBHEggoCRJynCScb2W/BoBU6YzNk2gvole1CbetInM79OeGkhsNJw+O4
2vxdIqiU8Dip/WmcFNxNOElE+ZbXCCdLrmkvYnFS/ze0SVLi8hxwN6Cs4GbI
DELyKRtRUHgzahreQWfXMgg7xiK/9G+wuEM8Tv5GOInVJIOTh9AtT0WH4FVU
N3w5pO+KA421D5B8ZPwETh6AVN/Kw4Tzu78mt6Sj3EROpp+ru6COxL2lBY6O
TgQsLv60EQSNBmZKs1iaHHZYEDTbuUO4TYm+r/FtUW6bmx/mbTfRqZtgqayE
s2eAeZPGjxElD9NNOcp3v4ezKp38p4viyXoY11A80RCCTr0M8+HxZHe99FB2
Sig/gGkb00PRD3/LDzDtfg9Bu5t8D8XCzXfBlkE5jNuBkIzUh7672wWEVtpG
6GfRSswwrr4Nrros7lrV35BHonuw2OAtmEDnJvuslpG51MB56SPaxsa1eMMl
h9ZHkda+gypFBKEiEyLyXJ5QrN/u7ZSNaKmwKyFmenr77PAHzUR6rvHPFzBS
xariy8/FkL67ahqMTgV6KeHpUpfC6ouHpFDIRodI4A/HJoq9CU763k2X7lDk
Qk1pWCTuKm+BnLxqqUqCKr0aJn5+vQhlCnK3HfZQKHHaAPuTJxKJn9bkNqNA
3oOrMhHaLCY2z461MzI91KrUEpRrZFB4PPGWTzJnFUoxMqU9qDPo4IpPw3wX
zD4XlF5PHKEqurMCuQjlWiXMzCqyIS9ayFDQ6djtJo8N7WY9dD4+vpAd6jYq
kEPnLtMooPf7E0M0AhJ0Fv8SGnUHrwWPkBYk4xSRtbxrJzsQzmrOYB39lYbp
cAX8pA1S5JT/nnf8gKh7Gi6UvwIbL10Oax7rIGNWorLxOdKWe9CjqWGXmbLb
maBxA9qVPxE0ZBtwkq5dxlybyi3oUyKv8h5k1n/1k2rQ2n86YdZcdSgpuAmD
ulb2FYJOk44BySZ0dMxBdeUDyCt9mFeDK6QU98Bg50fahq1oqPkTRY009LS9
gYr6KfFJRxilqK+5j9Qg8zo1YMzEgwTQNl4NuBL9DSIONaRLpqFn+jw4ZXp4
WsshnjIB4nkL0Td7OnpnLIa9V8kqqmzFIijTaxLAObUVA+sPsSM4ZF8tgupy
XbzFw3RiMwY2HmanT5B9uRDqHAHCJjkGl85A77TZkCxbjt4JEyE/dolZf/gX
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\
\>"],ExpressionUUID->"be10ad03-82bc-4630-807c-6c1b3d4818c4"]
}, Open  ]],

Cell["\<\
This looks good but we can make it look better, so the message gets straight \
away\
\>", "Text",
 CellChangeTimes->{{3.7705879411865273`*^9, 3.7705879628606253`*^9}, {
  3.7705937602816*^9, 
  3.770593784659315*^9}},ExpressionUUID->"5640cdf1-79ae-4a25-b5e1-\
792cdea4621c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PasswordCloud", "[", 
   RowBox[{"list_List", ",", "database_", ",", "mask_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"WordCloud", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "\"\<word\>\"", "]"}], "\[Rule]", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", "[", "\"\<freq\>\"", "]"}], "]"}]}], "&"}], "/@", " ", 
      RowBox[{"DictionaryAttack", "[", 
       RowBox[{"list", ",", "database"}], "]"}]}], "|>"}], ",", 
    RowBox[{"ColorNegate", "[", "mask", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PasswordCloud", "[", 
  RowBox[{
   RowBox[{"WordList", "[", "]"}], ",", "dataset", ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
fwXJFbYhHSEZNsxqstPs0E9xuGIr+Lz02h10gqSYj89zSzqBqIO34eflK3SC
pPg6Pk99B9ATH8LPyyQ6QVJMxuc5hU4g6uAz+HnZiU6QFDvj8/x3OoGog2/A
p2W5XjWyUIbiX8+9kE4g6oC+Mz6fDpAc98ATvYIOIOrgFvi0fJcOkBzfhyd6
Ex1A1MHv4NOiu39F8zl4ovfRAUQdPAmflg/TAZLjWHiiS+gAog7oV43Ta34X
zTvhiXbQAURuXgmflV7bhk6QHKPxmW5MJxA52QY/K7r7XzQb4zN9HZ1A5OSN
8ElZRgdIkg54qjvSAUROdoVPymN0gCRZAk/1TXQAkZO3wiflHjpAktwHT3V3
OoDICf3Tf7+kAyTJr+Cp7kMHEDnZDz4pN9IBkuRmeKoT6AAiJ++GT8o1dIAk
uQ6e6kF0AJGTQ+GToveLagY/gad6CB1A5OQD8EmZRwdIknnwVPUuwF6YCJ8U
/axoM7gCnupEOoDIifY/RbT/Ih/a/xTR/ot8aP9TRPsv8qH9TxHtv8iH9j9F
tP8iH9r/FNH+i3xo/1NE+y/yof1PEe2/yIf2P0W0/yIf2v8U0f6LfGj/U0T7
L/Kh/U8R7b/Ih/Y/RbT/Ih/a/xTR/ot8aP9TRPsv8qH9TxHtv8iH9j9FtP8i
H9r/FNH+i3xo/1NE+y/yof1PEe2/yIf2P0W0/yIf2v8U0f6LfGj/U0T7L/Kh
/U8R7b/Ih/Y/RbT/Ih/a/xTR/ot8aP9TRPsv8qH9TxHtv8iH9j9FtP8iH9r/
FNH+i3xo/1NE+y/yof1PEe2/yIf2P0W0/yIf2v8U0f6LfGj/U0T7L/Kh/U8R
7b/Ih/Y/RbT/Ih/a/xTR/ot8aP9TRPsv8qH9TxHtv8iH9j9FtP+ps719yn5h
j1snPGkpi7czO9m32Gm2Hb1mlWSUfdu68BlJ2Wy77Fu2Jb1uFWNPexKfi5Rl
+VcbT69chdjLOvCJSFmmHdnveaLGKP3eLwP6hD4LWMV38ElISfgtevUqwPb6
qp8Mape+F2Cn41OQkvI0ev1wbsVnICXlLfT64SzGZyAl5SJ6/XB010/GtZNe
Pxx6AlKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVp
dOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl0
6P5SkkaH7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo
/lKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVpdOj+
UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl06P5S
kkaH7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKS
RofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVpdOj+UpJG
h+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH
7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofu
LyVpdOj+0ey2R+16O9/OttNsmh2VOS37o7OzP3O9LbIe/N8vmtGh+0dxqV1p
M2xX26DfaWxgY7K/6sfZX03/+0YxOnT/9H3CvmLjrK2uqbTZ7vZVexL/d0/f
6ND9U3alXW4H17n5L6Ut+/+ea134c6RsdOj+qdppl9gOhUxoG5tjHfjzpGp0
6P4p2mUX2msKndJWdrF148+VotGh+6fnb2yPpkxqN7sTf7b0jA7dPy2fsxOs
tWmzarOPWzv+jGkZHbp/Sj5guzR9XjvaffhzpmR06P7peIltWMrE1rc5+LOm
Y3To/mnYnX3cXybT9dXAgowO3T8FO21S6XM7TN8TLMTo0P39+5zth0xu/+yf
TD+7f6ND9/dupx2IzW6CPY8/v3ejQ/f3bbd9EJ3eobod3KDRofv7ttyv+vXF
J/AGvo0O3d+zF9PDW8W38Q6ejQ7d36+/Len7/QOxvt2Lt/BrdOj+Xm23N9Cj
+xc72LN4D69Gh+7v1RPpwa3BdLyHV6ND9/fpggZe1aMZtNpdeBOfRofu79Hu
Jv2EbyOM043gQRkdur9HL6KH1iffxLt4NDp0f3+usNfRQ+uTrawTb+PP6ND9
/flNemTr5L/xNv6MDt3fm122PT2ydbKtrcT7eDM6dH9vzqUH1i/z8D7ejA7d
35sH0wPrl/fifbwZHbq/L/9sQ+iB9csQvWdQnUaH7u/Lr9DjGpDz8Ea+jA7d
35e70+MakD3xRr6MDt3fk89U7NZvX7Rl/5Z0J09Gh+7vySvpYeXip3gnT0aH
7u/JGfSwcvFJvJMno0P39+QYeli52A3v5Mno0P392F2R1/sZiI2sB2/lx+jQ
/f24iB5VbhbjrfwYHbq/H6+nR5WbG/BWfowO3d+PF9Cjys0FeCs/Rofu78ez
6VHl5nN4Kz9Gh+7vx9n0qHJzKt7Kj9Gh+/vxY/SocnMC3sqP0aH7+/FoelS5
ORpv5cfo0P39OJkeVW4m4638GB26vx+PoUeVm2PxVn6MDt3fj9V6x5/+OBFv
5cfo0P39+Bl6VLk5C2/lx+jQ/f3o5/7PRXgrP0aH7u/Ha+hR5eZavJUfo0P3
9+NielS5WYK38mN06P6eHEEPKxfD8U6ejA7d35Nvp4eViwl4J09Gh+7vyen0
sHIxA+/kyejQ/T15OT2sXMzFO3kyOnR/T/7d1qPHNSBD9frfdRkdur8v96fH
NSAH4I18GR26vy/n0OMakPPxRr6MDt3fl49aCz2wfmmxRXgjX0aH7u/NA+iB
9ctBeB9vRofu781q3wK+Du/jzejQ/b3ZY2+gR7ZOdrRuvI83o0P39+eF9MjW
yTfwNv6MDt3fn8tsFD20PnlN9m9Gt/FndOj+Hv0ePbQ+uRTv4tHo0P092mPj
6bG9jH30rp+DMjp0f5/+xtrowa1Bm92DN/FpdOj+Xq3Wq4F+Au/h1ejQ/b3a
YWPo0f2LN9tyvIdXo0P39+tCexU9vFVsYg/hLfwaHbq/Z6+gh7eKeXgHz0aH
7u/bWfT47BS8gW+jQ/f3bY9NQ6d3jG78Nmh06P7e7bYp2OwmWhf+/N6NDt3f
v102CZncYbYSf3b/Rofun4Kd9tHS53acrcCfOwWjQ/dPxYttaGkza7Mv4s+b
itGh+6fjrbZ5KRMbZjfgz5qO0aH7p+TVpUzsKvw5UzI6dP+UvKyUiV2GP2dK
Rofun5LnljKxc/HnTMno0P1TcmYpE5uJP2dKRofun5JHlDKxI/DnTMno0P1T
8q2lTOyt+HOmZHTo/ilZzuuCjsKfMyWjQ/dPxxUlvSZYq3Xiz5qO0aH7p+Oi
0mam9/grzujQ/dPx9tJmdjv+rOkYHbp/OpZz+6eGbgAVZ3To/ulYzu2fGroB
VJzRofunYzm3f2roBlBxRofun46Hlzazw/FnTcfo0P3TsZzbPzV0A6g4o0P3
T8ctS5uZbgAVZ3To/qlY1u2fGroBVJzRofun4qJSp6YbQEUZHbp/Kt5W6tR0
A6goo0P3T8Xybv/U0A2goowO3T8Vv1zq1HQDqCijQ/dPxRmlTk03gIoyOnT/
VCzv9k8N3QAqyujQ/VOxvNs/NXQDqCijQ/dPxfJu/9TYEn/eVIwO3T8Ny7z9
U0M3gIoyOnT/NFxU+tx0A6gYo0P3T8Nyb//U0A2gYowO3T8Ny739U0M3gIox
OnT/NCz39k8N3QAqxujQ/dOw3Ns/NXQDqBijQ/dPw3Jv/9TQDaBijA7dPw13
L31uugFUjNGh+6dhubd/augGUDFGh+6fgiustfS56QZQMUaH7p+CjyKT0w2g
IowO3T8Fy7/9U+M2/LlTMDp0/xS8FJmcbgAVYXTo/ilY/u2fGroBVITRofun
YPm3f2roBlARRofun4KHIZPTDaAijA7dPwXLv/1TQzeAijA6dP8ULP/2Tw3d
ACrC6ND9/Uvc/qmhG0BFGB26v3+Z2z81dAOocaND9/cvc/unhm4ANW506P7+
ZW7/1NANoMaNDt3fv8ztnxpfxp/dv9Gh+/uXuf1TYwb+7P6NDt3fv8ztnxq6
AdS40aH7+5e5/VNDN4AaNzp0f/++GpudbgA1bnTo/t6lbv/U0A2gxo0O3d+7
3O2fGroB1KjRoft795fo9HQDqFGjQ/f3Lnf7p4ZuADVqdOj+3v0SOj3dAGrU
6ND9vfsJdHq6AdSo0aH7e5e7/VNDN4AaNTp0f++OQ6e3O/783o0O3d+7o9Dp
jcKf37vRoft795Xo9DbFn9+70aH7e3djdHra/0aNDt3fu9ui09sBf37vRofu
793J6PSOxp/fu9Gh+3v3O+j0vos/v3ejQ/f37vO2BTa7kdaBP793o0P39+95
2OzOx5/dv9Gh+/u3x96LTO7A7J9MP7t/o0P3T8Gnbc/S57ZX9k+lnzsFo0P3
T8NlNqnUqU3O/on0M6dhdOj+6Xij7VHKxPa0m/BnTcfo0P3T8lG7wE6xKTax
CU6x2XahXvGrYKND95eSNDp0fylJo0P3l5I0OnR/KUmjQ/eXkjQ6dH8pSaND
95eSNDp0fylJo0P3l5I0OnR/KUmjQ/eXkjQ6dH8pSaND95eSNDp0fylJo0P3
l5I0OnR/KUmjQ/eXkjQ6dH8pSaND95eSNDp0fylJo0P3l5I0OnR/KUmjQ/eX
kjQ6dH8pSaND95eSNDp0fylJo0P3l5I0OnR/KUmjQ/eXkjQ6dH8pSaND95eS
NDp0fylJo0P3l5I0OnR/KUmjQ/eXkjQ6dH8pSaND95eSNDp0fylJo0P3l5I0
OnR/KUmjQ/eXkjQ6dH8pSaPThU9ASsouev1w/oHPQErKZ+j1w1mCz0BKysX0
+uE8iM9ASsr76fXDuROfgZSUv6bXD+dyfAZSUv6AXj+cz+IzkJLyM/T64RyF
z0BKykn0+uGMxWcgJeUYev1w1rN2fApSEi7LTr/4OT4HKQmvo1evEpyOz0FK
wtn06lWCPfA5SEk4ll69StBqi/FJSFm2j2UnX9T4Ij4LKcv2HHrtKsMb8VlI
WbY70WtXIRbg05CyTOfTK1cppuLzkLJMp9ArVynabCE+ESnL8g82hF65inE8
PhMpy/Kj9LpVjlfou4AyiI/q3m8fTMTnImUZHkqvWkW5Bp+MlM32Z/SaVZbt
rAOfjpTN9HnbgV6zCjMbn4+UzXQWvWKVpsV+gk9IymZ5dXbCRX8Mt0X4lKRs
hottBL1eDthbXwWQCbrc9qBXywnvs5X4tKQs0i47nF4rR0y1HnxiUhZlj278
1cls/QogE7HHTqHXySEf1mcBMgG7bBq9Sk55vy3HpydlIz5vR9Br5Ji99FNB
0rGP6Wv+DTLCrsanKOVg/KkNp9cnAVpstm4ESGd22Czd9SuMbe1afKJS5vVG
vbpn4Xwg+2yKnquUA/moHUavSqKsZ1PtYXy+Uq7LP9pMW59ek6QZYkfbfHzO
Uq7tXTbF2uj1CMJOdpY9gk9cyppLbI69hV6JcLTaODvVfmbt+PxlTNvtOptt
Y/U+fijr2W52pJ1pl9oddr89ZkvxcyHTdGl2uu7PTtml2Wk70sbYUProN87/
A7jFu90=
      "], {{0, 512}, {512, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{512, 512},
    PlotRange->{{0, 512}, {0, 512}}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7705937982173653`*^9, 3.770593830264913*^9}, {
  3.770593938562901*^9, 3.7705939449437532`*^9}, {3.770594091660005*^9, 
  3.7705941182083693`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"32c6307c-bc63-4acf-a6df-2b48cdb3eca3"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"password\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.17500000000000002`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-0.5, 0.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"monkey\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.062442878927394835`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-1.5, 32.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"dragon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.061953734218425524`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {69.5, -30.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"computer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0413079764987587],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-62.5, -29.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"princess\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0411867881946546],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-64.5, -46.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"sunshine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038178573570027276`],
     FontColor->RGBColor[1, 0.75, 0]], {74.5, 28.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"superman\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03511977232926172],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-77.5, 30.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"tinkle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.045794223948666835`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {55.5, -55.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"football\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0390030762968345],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-58.5, -62.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"shadow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03529289847798187],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-73.5, 42.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"baseball\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03443140587159445],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {54.5, -71.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"basketball\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030355467394153065`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-50.5, -77.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mustang\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029406440517937137`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {73.5, 43.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"chocolate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029998236365330517`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {47.5, -84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"whatever\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02907665631757022],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-45.5, -91.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"welcome\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158688272434686`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {47.5, -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"butterfly\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029591474367618033`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {89.5, 56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"master\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03414203184789221],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-88.5, 57.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diamond\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028352524531130758`],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {101.5, -48.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"freedom\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030251760608480702`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-44.5, -104.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"jasmine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02903763959527329],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-87.5, 70.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"arsenal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02861512734061627],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {87.5, 68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"batman\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029629435442666673`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {45.5, -109.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"snoopy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028309623026960107`],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {101.5, -60.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"purple\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030550466553857857`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {85.5, 81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"scorpion\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025484077602177507`],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-87.5, 82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"elephant\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025491636036475286`],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-106.5, -62.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"midnight\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025499574503782454`],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-117.5, -39.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"beautiful\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025621649551575122`],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-99.5, -75.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"christian\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027960330465444723`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-43.5, -117.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"orange\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02903058787165469],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {117.5, 39.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pepper\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029181841009390197`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {94.5, -82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"precious\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025236971694296943`],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-119.5, 41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"veronica\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025406339738813167`],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-84.5, 93.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mother\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030629260064470486`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-90.5, -88.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lovely\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03233991531738527],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {82.5, 96.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hockey\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027424948407000153`],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {41.5, -122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"monster\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02741810781283121],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-82.5, 105.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"forever\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029439165582634236`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {128.5, -26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nothing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.026052775887778223`],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-129.5, 26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cookie\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028975525311183695`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-86.5, -102.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"phoenix\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02566822470816984],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {93.5, -95.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"playboy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025833159034243228`],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-41.5, -130.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"marina\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029655868849763945`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {82.5, 109.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hunter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031308379052242714`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-74.5, 117.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"school\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02821165896231846],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {83.5, -110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rainbow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027123455552887504`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-0.5, -139.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thunder\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02565323451724407],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {40.5, -135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"golfer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03021840215543463],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-82.5, -115.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"apple\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03065615795635701],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {72.5, 122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ginger\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028679479596872243`],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-63.5, 130.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"martin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028901123293123963`],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {78.5, -124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"slipknot\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.026999480340047906`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {64.5, 134.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"chicken\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02733884981742933],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-41.5, -144.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"banana\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027518098720189576`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {39.5, -146.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"maverick\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02501743929254181],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-55.5, 141.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"soccer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.033952690957438275`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-82.5, -129.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"buster\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03040985434038515],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-0.5, -152.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"love\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03553937099751346],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {128.5, -77.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"heather\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.026208842776965946`],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {47.5, 145.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cheese\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027980261085492508`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-0.5, 154.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"yellow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02803139663819985],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-128.5, -86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"matrix\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02823247632605481],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-37.5, 152.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"heaven\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02537809061844883],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {77.5, -136.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dolphin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02546634272840617],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-123.5, -99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"secret\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030608949411413323`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {130.5, -88.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nirvana\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.026540147109370405`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {119.5, -106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"family\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029163726102609477`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {35.5, 158.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"killer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03431942281149546],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-114.5, -114.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"flower\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029940513573793823`],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-36.5, -157.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"destiny\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02652287672038832],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-79.5, -142.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"peanut\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027771960770459216`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {34.5, -159.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bailey\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027905352356753593`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-0.5, 166.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"junior\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029013275256782673`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {111.5, -123.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hello\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03160687386817021],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-0.5, -166.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"summer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02996458233105492],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {82.5, -146.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"angel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028420465988030934`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-68.5, 153.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"genius\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025058736212895054`],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-32.5, 164.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"money\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.026246550496674993`],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {69.5, 155.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"crystal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02535693544759303],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-31.5, -169.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"jasper\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02615568038154188],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-130.5, -49.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cherry\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02512600205555632],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-69.5, -155.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"spider\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025584532994325122`],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {68.5, -158.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"prince\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02762716819388327],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {32.5, 171.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"scooter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.026510842341757775`],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {33.5, -171.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"muffin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02513073135522868],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-120.5, -126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"music\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025775858501605853`],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {-0.5, 178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bandit\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02666315112674157],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-31.5, 176.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"winner\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {116.5, -134.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cooper\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025103242300883115`],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-64.5, -167.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"guitar\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025507555196979555`],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-134.5, -72.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tennis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.026109443032066623`],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-0.5, -180.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"august\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025017143711312285`],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-114.5, -141.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"beauty\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02506477451515529],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {-32.5, -181.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"silver\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027254778070575227`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {134.5, -64.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"friend\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02610403811815536],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-99.5, -155.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"success\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.026147657462454853`],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {73.5, -170.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"victor\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.026300599635787625`],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {27.5, 182.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pretty\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02575453442719032],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {98.5, -157.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"user\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029024211762274998`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {136.5, -38.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-200., 200.}, {-200., 200.}}]], "Output",
 CellChangeTimes->{
  3.770593786819417*^9, 3.770593847206987*^9, 3.770593957693371*^9, {
   3.7705941143551397`*^9, 3.770594135151016*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"80a1b605-4430-4a12-8b48-de88b940836f"]
}, Open  ]],

Cell["\<\
Now, Let\[CloseCurlyQuote]s Try other stuff, like Country names, using The \
Free form input\
\>", "Text",
 CellChangeTimes->{{3.7705942030586357`*^9, 
  3.770594234002294*^9}},ExpressionUUID->"b5aae6e5-335d-4134-979f-\
f0d74ed7c981"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"countries", " ", "=", " ", 
   RowBox[{
    RowBox[{"EntityList", "[", 
     TemplateBox[{
      "\"all countries, dependencies, and territories\"",
       RowBox[{"EntityClass", "[", 
         RowBox[{"\"Country\"", ",", "\"Countries\""}], "]"}],
       "\"EntityClass[\\\"Country\\\", \\\"Countries\\\"]\"","\"countries\""},
      
      "EntityClass"], "]"}], "//", "CommonName"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PasswordCloud", "[", 
  RowBox[{"countries", ",", "dataset"}], "]"}]}], "Input",
 CellChangeTimes->{{3.770594236614909*^9, 3.7705943123868303`*^9}, {
  3.7705943580008173`*^9, 3.7705943628885098`*^9}, {3.770594588348673*^9, 
  3.7705945937307*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"410025a1-d7c3-47c3-bd98-e550c06a6538"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Argentina\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.23255813953488372`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Jordan\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.22401004894346097`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0., 55.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Ireland\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06053839570253914],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-5., -32.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Australia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05372531359749425],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., -49.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Canada\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04485984340490479],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {48., -28.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Pakistan\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04158025419284901],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., -63.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Russia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03468253752749301],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-12., 26.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"India\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03322259136212625],
     FontColor->RGBColor[1, 0.75, 0]], {45., -41.}, Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-151.5, 149.5}, {-69.5, 87.5}}]], "Output",
 CellChangeTimes->{{3.770594247447731*^9, 3.770594283229602*^9}, 
   3.7705943644733963`*^9, {3.770594589405164*^9, 3.770594601498314*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"da0fff7c-c1d0-429e-b3e1-0636497ca9f3"]
}, Open  ]],

Cell["What about number sequences?", "Text",
 CellChangeTimes->{{3.770595356054393*^9, 
  3.770595368457691*^9}},ExpressionUUID->"579244b4-7d7f-4047-97f4-\
93fdb037ec99"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sequences", " ", "=", " ", 
   RowBox[{"StringJoin", "/@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ToString", "/@", 
       RowBox[{"Range", "[", "n", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "10"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PasswordCloud", "[", 
  RowBox[{"sequences", ",", "dataset"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.770595151301537*^9, {3.770595267929729*^9, 3.7705953066693563`*^9}, {
   3.770595342026639*^9, 3.770595404574606*^9}, {3.770595715325107*^9, 
   3.7705957271569443`*^9}, 3.770599093325719*^9},
 CellLabel->
  "In[151]:=",ExpressionUUID->"1203aaf9-8c3b-4b6a-8a7d-5237fe943045"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"123456\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.3056768558951965],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"123456789\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13016049005135402`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0., -38.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"12345678\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07601915292234315],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., 40.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"1234567\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07143493878350506],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., 57.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"12345678910\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04515381829529489],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {0., -56.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"12345\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06972628250179119],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {0., -70.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"1234\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057540962161120854`],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {55., 38.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"123\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05489285908853141],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-50., 38.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"12\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043668122270742356`],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {4., -14.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"1\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.045552517969127036`],
     FontColor->RGBColor[1, 0.75, 0]], {0., 13.}, Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-113.5, 115.5}, {-77.5, 66.5}}]], "Output",
 CellChangeTimes->{
  3.7705951517063847`*^9, {3.7705952689950953`*^9, 3.770595286634956*^9}, 
   3.77059534975904*^9, {3.770595382119089*^9, 3.770595405427772*^9}, 
   3.770595727661983*^9, 3.770599094633092*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"25ed2a1b-5fa8-4d50-8ad9-75adaf5513f5"]
}, Open  ]],

Cell["Even Football Teams!", "Text",
 CellChangeTimes->{{3.7705963219599323`*^9, 
  3.770596327809235*^9}},ExpressionUUID->"513ada30-5546-4454-8db4-\
8ff6b264bd15"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"teams", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], "&"}], "/@", 
     RowBox[{"StringSplit", "@", 
      RowBox[{"WolframAlpha", "[", 
       RowBox[{"\"\<Football Teams\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Result\>\"", ",", "1"}], "}"}], ",", 
          "\"\<ComputableData\>\""}], "}"}], ",", 
        RowBox[{"PodStates", "\[Rule]", 
         RowBox[{"{", "\"\<Result__More\>\"", "}"}]}]}], "]"}]}]}], "//", 
    "Decapitalize"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PasswordCloud", "[", 
  RowBox[{"teams", ",", "dataset"}], "]"}]}], "Input",
 CellChangeTimes->{{3.770596204005821*^9, 3.770596209151451*^9}, {
  3.770596246324836*^9, 3.7705964265166597`*^9}, {3.7705965265350447`*^9, 
  3.7705965448936663`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"d0affbc7-55e4-4b6f-9baf-019dd6c1b8df"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"cowboys\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2566063295528333],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"tigers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2928870292887029],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {6.5, -51.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"bulldogs\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.14842703121167516`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {6.5, 41.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"panthers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13850286285362706`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-3.5, 71.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"broncos\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1264322393819195],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {47.5, -84.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"giants\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12651636410727668`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-0.5, 99.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"chargers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08674066441793062],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-0.5, -103.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"cardinals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07651823566997971],
     FontColor->RGBColor[1, 0.75, 0]], {-80.5, -83.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"indians\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07051988782860105],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-88.5, 26.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"browns\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07156762304441348],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-89.5, 43.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"bengals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05808982234854904],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {87.5, 59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"chiefs\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0658675355929376],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {93.5, 26.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"wolverines\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04385744835857153],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-67.5, 87.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bears\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05999410022254389],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {92.5, 41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"blues\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05738368450236889],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-97.5, -26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"jackets\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04218515078783443],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-84.5, 56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.047818958152665215`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-87.5, -46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"texans\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043248181408257244`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-0.5, -23.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"49ers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04389058840189406],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {90.5, -24.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"colts\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.044578881609362075`],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {53.5, 87.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reds\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04184100418410042],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {72.5, 72.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-121., 118.}, {-116., 116.}}]], "Output",
 CellChangeTimes->{3.770596464867908*^9, 3.770596548861335*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"9dddfa7e-598d-4f54-8e76-7661c6f3bbed"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.770598923906452*^9, 3.770598963895628*^9}, {
   3.770598999430355*^9, 3.770599014936219*^9}, {3.770599060148962*^9, 
   3.770599071266807*^9}, {3.770599128119895*^9, 3.7705991313955383`*^9}, 
   3.770599309599484*^9},ExpressionUUID->"ba2a7cce-4080-487f-8765-\
15d513971aa5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"layouts", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"StringTake", "[", 
      RowBox[{"\"\<qwertyuiop\>\"", ",", 
       RowBox[{"Range", "[", "10", "]"}]}], "]"}], " ", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"StringTake", "[", 
      RowBox[{"\"\<asdfghjkl\>\"", ",", 
       RowBox[{"Range", "[", "9", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"StringTake", "[", 
      RowBox[{"\"\<zxcvbnm\>\"", ",", 
       RowBox[{"Range", "[", "7", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PasswordCloud", "[", 
  RowBox[{"layouts", ",", "dataset"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7705991342386923`*^9, 3.770599375549891*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"ad3298b0-b499-43f6-97f2-81d7cf2a5625"],

Cell[BoxData[
 TemplateBox[{
  "StringTake","ambgsntx",
   "\"Warning: interpreting list of integers as a list of sequence \
specifications.\"",2,168,124,21050829830577772556,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.770599349398712*^9, 3.770599376063828*^9}},
 CellLabel->
  "During evaluation of \
In[168]:=",ExpressionUUID->"1e63593c-54e4-4653-ab2a-ae89fbf720af"],

Cell[BoxData[
 TemplateBox[{
  "StringTake","ambgsntx",
   "\"Warning: interpreting list of integers as a list of sequence \
specifications.\"",2,168,125,21050829830577772556,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.770599349398712*^9, 3.770599376125682*^9}},
 CellLabel->
  "During evaluation of \
In[168]:=",ExpressionUUID->"a3788fab-91a4-4b2b-82ee-d14e880953b8"],

Cell[BoxData[
 TemplateBox[{
  "StringTake","ambgsntx",
   "\"Warning: interpreting list of integers as a list of sequence \
specifications.\"",2,168,126,21050829830577772556,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.770599349398712*^9, 3.770599376175976*^9}},
 CellLabel->
  "During evaluation of \
In[168]:=",ExpressionUUID->"811f714c-792d-4f31-b1ca-73afa15cc36e"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringTake\\\", \
\\\"::\\\", \\\"ambgsntx\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,168,127,21050829830577772556,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.770599349398712*^9, 3.77059937623359*^9}},
 CellLabel->
  "During evaluation of \
In[168]:=",ExpressionUUID->"951c94a0-6a98-4216-b289-5e7cf618bf7e"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"qwerty\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.33653846153846156`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"qwertyuiop\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12962747955769946`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0., -36.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"zxcvbnm\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09123532844514531],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., 28.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"asdfghjkl\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08763028995005305],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-9., 45.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"asdfgh\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07488353014767339],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {12., -58.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"qwertyui\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05703083299413887],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-13., 61.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"qwertyu\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05899508082263886],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {50., 43.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"zxcvbn\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06668890293541394],
     FontColor->RGBColor[1, 0.75, 0]], {-36., -57.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"qwertyuio\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.049553255566258496`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-62., 28.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"asdfghjk\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.052992850196540035`],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {32., 60.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"qwert\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06866065715374722],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-1., -73.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"asdfghj\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05236292002749897],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {7., 74.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"asdf\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07136303331585517],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-62., 41.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"asdfg\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05281648794651722],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-27., 73.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"zxcvb\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.049277717983892674`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {51., -56.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"qwer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.052818383499505434`],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-50., 56.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"qwe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05320530377545832],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-31., -69.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"asd\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.050886284249685436`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {72., 26.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"zxcv\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04880807577553442],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {30., -73.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"zxc\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04851744959138247],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {35., 72.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"as\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04807692307692308],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-49., 65.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"q\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04921486144680372],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-16., -17.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"a\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.053586840680924695`],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {43., 0.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"z\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051343112519843415`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {42., -10.},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-104.5, 103.5}, {-81.5, 81.5}}]], "Output",
 CellChangeTimes->{3.770599377380268*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"f212dff3-f80b-474f-8af9-5dd77bc3db0d"]
}, Open  ]],

Cell["\<\
Finally, Let\[CloseCurlyQuote]s compare it with all the previous lists for \
comparison\
\>", "Text",
 CellChangeTimes->{{3.7705994024589853`*^9, 3.770599416247242*^9}, {
  3.770599466823678*^9, 
  3.7705994929365187`*^9}},ExpressionUUID->"3d214afc-ff5e-419c-b572-\
473f1988d871"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"all", " ", "=", " ", 
   RowBox[{"Union", "[", 
    RowBox[{
     RowBox[{"WordList", "[", "]"}], ",", "countries", ",", "sequences", ",", 
     "teams", ",", "layouts"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PasswordCloud", "[", 
  RowBox[{"all", ",", "dataset", ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztnQuYlnWZh5+ZAfNYAopJmYbH0koE8xhFmodOniJEjMxWTCNIFE23K82s
rewg66Vm21ZrpSJ1WXnKPGVaKoupW54iE5G0MrF0YByYw74fZAoOM+833/u9
9/v8n999X9u65qrv/fwfmMN/vu/1x848fFqrmZ28fvYfh3/ktAmzZn3k9CM2
zf6PiTNOPuH4Gcf928EzTjnu+ONm7XlsW/YnrXX1/9T+l0iaETbO3mNT7SQ7
xy6yH9ottsAeskcyl2a2W29m+6o/rv25B7P/9habl/2V59gn7UP2bhub/R2E
ED5ote3s0Gx359hP7P/s2VX73ajP2n3Z3+08m2mHZH93/aYhRLV4le1r07Kd
v92eK2Tj+7PT7rdL7DR7n42kH1uIwLTaLnZ8tot/aPrOr8s/2P9kv+7srI8J
hCiNIdnv9p+2a+wZbO/XdqldbWfYPtm/mRCiWYy0idnv90vxfV+X7XZV9vHA
a+lMQiRFa/Z763/YPdaDb3gee+w39gXb21robEK4Z2c7yx7Bd3owPm5zss9U
9KuAEIOhtvkL8S1u1MX6VUCIuhhps+1hfHOL9CE72TanswpRcVptf7vEluP7
2gw77Qp7n7XRiYWoJFvYGU4/06/HR+x03RwSYg22yz5LTvN3/b7szD7G2ZlO
LkQl2Df7uLgL38my7bEbss8GhIhLqx1pC/BNJP1fm6TbwyIgLdnvfvfi+1cF
H7Cp+jVAhGJ/uxvfuyr5W5uoOwIiBPvbfHzfquhd+nqASJw32034nlXZG+1N
9IiEaArDbU7Ar/PXa7ddovsBIjGG2jR7Ct8tLz5jp9kr6JEJURAH2UP4Tnnz
QTuAHpsQDTPMLsZ3yatX6GeGhGsm2l/xLfLs0uzzJiE8MsquxPcnBa+1relR
ClEXLfbxEl6LO4rP2om6HSTcMNKuwncmNX9uW9JjFSIHB9gT+Lak6F91P1BU
nPVtjpNX6fVoj11sG9IjFmIdvMUewHckdX+nG8Kikhxly/DtiGCHHUOPWog1
GGJfxPcikhfbUHrkQvyTze1mfCOieZu+HyAqwT76ej/in2xvevQiPB+xFfgm
RLXTPkyPXwSmxc7CdyC6c3QzUCCsZ9/DT7/stbm2Pn0URDiG2S34yZervd02
o4+DCMVovaJHpXzAtqGPhAjDTrYEP/FyTZ+0XehjIUIwRq/pUUn/YrvSR0Mk
zzj7G37SZd8+Y3vRx0MkzXh7Fj/lct222370ERHJclCg9+j26jI7kD4mIkne
aR346ZYD26lfAUTh7KnX83PjMnsbfVxEUuxqS/FTLfP7dxtLHxmRDLvoa/7u
fMp2po+NSILt9PO9Lv2z7UgfHeGezWwhfpLl4Pyj3klYNMQG9mv8FMvBO1+v
FywGTav9CD/BsjHnZVMUYjB8HT+9snG/TB8j4ZJp+MmVxTidPkrCHQdbF35u
ZTF26UagqItt9B3/pFxqo+kjJdywgd2Nn1hZrPfqOwEiJ9/FT6ss3u/Tx0q4
YCZ+UmVzPIE+WqLy7G2d+DmVzXGFfi5Q9MswW4yfUtk8H7fh9BETFWYufkJl
c/0hfcREZTkOP52y+eo9A0VfbKvX9gxhu+1AHzVROYbafPxkNs+/2F3Z5zZf
suk22d5lY2y0DcvcaNWTb7Tqj0dnf/aA7L+dnv1Vc7MWKb/HwR02BD5tomp8
Hj+VRdtl99h/2Qx7xyC/5jXcJthM+5bdm+BN6LMLPj3CN+MSOuOddpOdafvb
JoXV2ST7mOEsuzmh74yutN0KqyO8MzT7PY4+kUX4mF1kh9jGTeu0iR1q37DH
8ecswrv1OYD4J2fgp7FRl9gc29daSuo1Nvun/Ql/5kY9taRaotrs6Pp9PTrs
B9nn6eW/xk2r7WeX2fP48w/e5bZd6dVE1WixW/GTOFgftpNsBFpvM5tlv8c7
DNabSvuISVSVj+GncHDeau+vyCvbtdqhdhveY3B+lI4nUDZz+L4+PfZj250O
9zL2sKvwMvX7NxtGhxMgF+InsF5vqODuv4DHXwPOo6MJjF1sJX7+6nG+g59f
HW8L8E71uMLeQCcTENfjpy+/T9g0a6OD5aLFptqTeK/83kAHEwiH4Ccvryvt
3Cbe6mkGm9jXHN2ofA+dS5TOem6+b3VfhT/j749d3XwmsNBeQccSJfNJ/NTl
sdPOsKF0qkEz1D6dfX5NN8yj3iEkFhvZn/EzN7APJvBTKmPtIbzjwD6hVwcP
xafwEzewl/zz5/O9s4HNwVsO7Ml0JlEaG1f+1S2es0l0pEKZbO140/59qsCf
lxbV5kz8tPXv720XOlHh7GQP4F3793Q6kSiFYfZ3/Kz159X2KjpRU9jUrsXb
9ufTiXYXa3IOftL68wInt3wGwxC7CO/bn2fSgUTT2Sj7dZ4+Z+uyx86i8zSd
mdaNd16XTyfyFVexbqr77n4r7Eg6TikcVeGfujiRjiOaSps9gp+xvu20w+g4
pfHeyr7i0h8T/uxLmE3CT1jfLrMD6DSlMsGew5v37RF0GtFE7sTPV1922kF0
mNJ5Z0U/BphPhxFNYzx+uvpyRfbxcEQOrOirh+5DhxFN4of42Xq5XfYBOgvG
Byv5M8JX0FlEU9iikj+L9nE6C0oV33G500bSWUQTOB0/WS/3S3QUnK/iM3i5
p9BRROG02EL8XK3tvIq8gjdJq/0In8PaPqz3BUiO/fBTtbZ32wZ0lEqwod2D
z2Jt305HEQVzOX6m1vRpG00nqQxb21P4PNb0e3QSUSgjKva9pm47mE5SKd5V
se8EdNhwOokokOn4iVpT/aTZ2pyNz2RNj6eDiAK5HT9PL/VXumX+MobYr/G5
vNSb6SCiMF5bqZ85fc62p4NUktH2D3w2L9pto+ggoiCq9VrfU+kcleUYfDYv
Va8Jngp34GfpRa+lY1San+HzedHb6BiiELayHvwsvWC7vZ7OUWm2rtDPBffY
6+gcogBm4yfpRfUx5UCchM/oRU+iY4gCuA0/Ry+4QPd9B6TN7sXn9IK/oGOI
hhlWoVebexsdwwX7VubztZV6RXD3fBA/RS94GZ3CDfPwWb1gnNdkTJVv42do
tR22NZ3CDa+vzG3tb9IpREO02J/wM7Tar9EpXPGf+LxW+7h+Etg1Y/ATtNp2
24JO4YpX2zJ8ZqtN750YI3EGfn5W+wU6hDvOxWe2Wr0WkGduxM9PzXYbQYdw
x+YV+QjgOjqEGDRDKnKbbA4dwiUX4HOr+Q/9rKZbxuKnp2aXbUuHcMnoirwm
yJvpEGKQzMDPTs15dAa3VOOVQfWeoF6pxmv+jaczuOXt+Oxq/oDOIAbJ4/jZ
6bWH9B3kBngAn1+vLaIjiEGxNX5yas6iM7jmVHx+NbeiM4hBUIWb/8/bZnQG
14y0TnyGvYHfodEzn8fPTa/9iI7gnp/iM+y1z9IRxCC4Cj83vdnHIKIxpuAz
7LUr6QhiEDyGn5tlthEdwT2b2HJ8jo/QEUTdbFqBV5GYS0dIAv4WQI+9ko4g
6mQ8fmp67Sg6QhJMxefYa3vREUSd8O/41W0j6QhJsHkF3r1F7wbmjYvwM3Mn
nSAZFuCzPJ9OIOrkBvzM6D0+i+IcfJZ61xZvLMTPjF7ttygm4LN8kE4g6qIV
fwXJFbYhHSEZNsxqstPs0E9xuGIr+Lz02h10gqSYj89zSzqBqIO34eflK3SC
pPg6Pk99B9ATH8LPyyQ6QVJMxuc5hU4g6uAz+HnZiU6QFDvj8/x3OoGog2/A
p2W5XjWyUIbiX8+9kE4g6oC+Mz6fDpAc98ATvYIOIOrgFvi0fJcOkBzfhyd6
Ex1A1MHv4NOiu39F8zl4ovfRAUQdPAmflg/TAZLjWHiiS+gAog7oV43Ta34X
zTvhiXbQAURuXgmflV7bhk6QHKPxmW5MJxA52QY/K7r7XzQb4zN9HZ1A5OSN
8ElZRgdIkg54qjvSAUROdoVPymN0gCRZAk/1TXQAkZO3wiflHjpAktwHT3V3
OoDICf3Tf7+kAyTJr+Cp7kMHEDnZDz4pN9IBkuRmeKoT6AAiJ++GT8o1dIAk
uQ6e6kF0AJGTQ+GToveLagY/gad6CB1A5OQD8EmZRwdIknnwVPUuwF6YCJ8U
/axoM7gCnupEOoDIifY/RbT/Ih/a/xTR/ot8aP9TRPsv8qH9TxHtv8iH9j9F
tP8iH9r/FNH+i3xo/1NE+y/yof1PEe2/yIf2P0W0/yIf2v8U0f6LfGj/U0T7
L/Kh/U8R7b/Ih/Y/RbT/Ih/a/xTR/ot8aP9TRPsv8qH9TxHtv8iH9j9FtP8i
H9r/FNH+i3xo/1NE+y/yof1PEe2/yIf2P0W0/yIf2v8U0f6LfGj/U0T7L/Kh
/U8R7b/Ih/Y/RbT/Ih/a/xTR/ot8aP9TRPsv8qH9TxHtv8iH9j9FtP8iH9r/
FNH+i3xo/1NE+y/yof1PEe2/yIf2P0W0/yIf2v8U0f6LfGj/U0T7L/Kh/U8R
7b/Ih/Y/RbT/Ih/a/xTR/ot8aP9TRPsv8qH9TxHtv8iH9j9FtP+ps719yn5h
j1snPGkpi7czO9m32Gm2Hb1mlWSUfdu68BlJ2Wy77Fu2Jb1uFWNPexKfi5Rl
+VcbT69chdjLOvCJSFmmHdnveaLGKP3eLwP6hD4LWMV38ElISfgtevUqwPb6
qp8Mape+F2Cn41OQkvI0ev1wbsVnICXlLfT64SzGZyAl5SJ6/XB010/GtZNe
Pxx6AlKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVp
dOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl0
6P5SkkaH7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo
/lKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVpdOj+
UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl06P5S
kkaH7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKS
RofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVpdOj+UpJG
h+4vJWl06P5SkkaH7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH
7i8laXTo/lKSRofuLyVpdOj+UpJGh+4vJWl06P5SkkaH7i8laXTo/lKSRofu
LyVpdOj+0ey2R+16O9/OttNsmh2VOS37o7OzP3O9LbIe/N8vmtGh+0dxqV1p
M2xX26DfaWxgY7K/6sfZX03/+0YxOnT/9H3CvmLjrK2uqbTZ7vZVexL/d0/f
6ND9U3alXW4H17n5L6Ut+/+ea134c6RsdOj+qdppl9gOhUxoG5tjHfjzpGp0
6P4p2mUX2msKndJWdrF148+VotGh+6fnb2yPpkxqN7sTf7b0jA7dPy2fsxOs
tWmzarOPWzv+jGkZHbp/Sj5guzR9XjvaffhzpmR06P7peIltWMrE1rc5+LOm
Y3To/mnYnX3cXybT9dXAgowO3T8FO21S6XM7TN8TLMTo0P39+5zth0xu/+yf
TD+7f6ND9/dupx2IzW6CPY8/v3ejQ/f3bbd9EJ3eobod3KDRofv7ttyv+vXF
J/AGvo0O3d+zF9PDW8W38Q6ejQ7d36+/Len7/QOxvt2Lt/BrdOj+Xm23N9Cj
+xc72LN4D69Gh+7v1RPpwa3BdLyHV6ND9/fpggZe1aMZtNpdeBOfRofu79Hu
Jv2EbyOM043gQRkdur9HL6KH1iffxLt4NDp0f3+usNfRQ+uTrawTb+PP6ND9
/flNemTr5L/xNv6MDt3fm122PT2ydbKtrcT7eDM6dH9vzqUH1i/z8D7ejA7d
35sH0wPrl/fifbwZHbq/L/9sQ+iB9csQvWdQnUaH7u/Lr9DjGpDz8Ea+jA7d
35e70+MakD3xRr6MDt3fk89U7NZvX7Rl/5Z0J09Gh+7vySvpYeXip3gnT0aH
7u/JGfSwcvFJvJMno0P39+QYeli52A3v5Mno0P392F2R1/sZiI2sB2/lx+jQ
/f24iB5VbhbjrfwYHbq/H6+nR5WbG/BWfowO3d+PF9Cjys0FeCs/Rofu78ez
6VHl5nN4Kz9Gh+7vx9n0qHJzKt7Kj9Gh+/vxY/SocnMC3sqP0aH7+/FoelS5
ORpv5cfo0P39OJkeVW4m4638GB26vx+PoUeVm2PxVn6MDt3fj9V6x5/+OBFv
5cfo0P39+Bl6VLk5C2/lx+jQ/f3o5/7PRXgrP0aH7u/Ha+hR5eZavJUfo0P3
9+NielS5WYK38mN06P6eHEEPKxfD8U6ejA7d35Nvp4eViwl4J09Gh+7vyen0
sHIxA+/kyejQ/T15OT2sXMzFO3kyOnR/T/7d1qPHNSBD9frfdRkdur8v96fH
NSAH4I18GR26vy/n0OMakPPxRr6MDt3fl49aCz2wfmmxRXgjX0aH7u/NA+iB
9ctBeB9vRofu781q3wK+Du/jzejQ/b3ZY2+gR7ZOdrRuvI83o0P39+eF9MjW
yTfwNv6MDt3fn8tsFD20PnlN9m9Gt/FndOj+Hv0ePbQ+uRTv4tHo0P092mPj
6bG9jH30rp+DMjp0f5/+xtrowa1Bm92DN/FpdOj+Xq3Wq4F+Au/h1ejQ/b3a
YWPo0f2LN9tyvIdXo0P39+tCexU9vFVsYg/hLfwaHbq/Z6+gh7eKeXgHz0aH
7u/bWfT47BS8gW+jQ/f3bY9NQ6d3jG78Nmh06P7e7bYp2OwmWhf+/N6NDt3f
v102CZncYbYSf3b/Rofun4Kd9tHS53acrcCfOwWjQ/dPxYttaGkza7Mv4s+b
itGh+6fjrbZ5KRMbZjfgz5qO0aH7p+TVpUzsKvw5UzI6dP+UvKyUiV2GP2dK
Rofun5LnljKxc/HnTMno0P1TcmYpE5uJP2dKRofun5JHlDKxI/DnTMno0P1T
8q2lTOyt+HOmZHTo/ilZzuuCjsKfMyWjQ/dPxxUlvSZYq3Xiz5qO0aH7p+Oi
0mam9/grzujQ/dPx9tJmdjv+rOkYHbp/OpZz+6eGbgAVZ3To/ulYzu2fGroB
VJzRofunYzm3f2roBlBxRofun46Hlzazw/FnTcfo0P3TsZzbPzV0A6g4o0P3
T8ctS5uZbgAVZ3To/qlY1u2fGroBVJzRofun4qJSp6YbQEUZHbp/Kt5W6tR0
A6goo0P3T8Xybv/U0A2goowO3T8Vv1zq1HQDqCijQ/dPxRmlTk03gIoyOnT/
VCzv9k8N3QAqyujQ/VOxvNs/NXQDqCijQ/dPxfJu/9TYEn/eVIwO3T8Ny7z9
U0M3gIoyOnT/NFxU+tx0A6gYo0P3T8Nyb//U0A2gYowO3T8Ny739U0M3gIox
OnT/NCz39k8N3QAqxujQ/dOw3Ns/NXQDqBijQ/dPw3Jv/9TQDaBijA7dPw13
L31uugFUjNGh+6dhubd/augGUDFGh+6fgiustfS56QZQMUaH7p+CjyKT0w2g
IowO3T8Fy7/9U+M2/LlTMDp0/xS8FJmcbgAVYXTo/ilY/u2fGroBVITRofun
YPm3f2roBlARRofun4KHIZPTDaAijA7dPwXLv/1TQzeAijA6dP8ULP/2Tw3d
ACrC6ND9/Uvc/qmhG0BFGB26v3+Z2z81dAOocaND9/cvc/unhm4ANW506P7+
ZW7/1NANoMaNDt3fv8ztnxpfxp/dv9Gh+/uXuf1TYwb+7P6NDt3fv8ztnxq6
AdS40aH7+5e5/VNDN4AaNzp0f/++GpudbgA1bnTo/t6lbv/U0A2gxo0O3d+7
3O2fGroB1KjRoft795fo9HQDqFGjQ/f3Lnf7p4ZuADVqdOj+3v0SOj3dAGrU
6ND9vfsJdHq6AdSo0aH7e5e7/VNDN4AaNTp0f++OQ6e3O/783o0O3d+7o9Dp
jcKf37vRoft795Xo9DbFn9+70aH7e3djdHra/0aNDt3fu9ui09sBf37vRofu
793J6PSOxp/fu9Gh+3v3O+j0vos/v3ejQ/f37vO2BTa7kdaBP793o0P39+95
2OzOx5/dv9Gh+/u3x96LTO7A7J9MP7t/o0P3T8Gnbc/S57ZX9k+lnzsFo0P3
T8NlNqnUqU3O/on0M6dhdOj+6Xij7VHKxPa0m/BnTcfo0P3T8lG7wE6xKTax
CU6x2XahXvGrYKND95eSNDp0fylJo0P3l5I0OnR/KUmjQ/eXkjQ6dH8pSaND
95eSNDp0fylJo0P3l5I0OnR/KUmjQ/eXkjQ6dH8pSaND95eSNDp0fylJo0P3
l5I0OnR/KUmjQ/eXkjQ6dH8pSaND95eSNDp0fylJo0P3l5I0OnR/KUmjQ/eX
kjQ6dH8pSaND95eSNDp0fylJo0P3l5I0OnR/KUmjQ/eXkjQ6dH8pSaND95eS
NDp0fylJo0P3l5I0OnR/KUmjQ/eXkjQ6dH8pSaND95eSNDp0fylJo0P3l5I0
OnR/KUmjQ/eXkjQ6dH8pSaPThU9ASsouev1w/oHPQErKZ+j1w1mCz0BKysX0
+uE8iM9ASsr76fXDuROfgZSUv6bXD+dyfAZSUv6AXj+cz+IzkJLyM/T64RyF
z0BKykn0+uGMxWcgJeUYev1w1rN2fApSEi7LTr/4OT4HKQmvo1evEpyOz0FK
wtn06lWCPfA5SEk4ll69StBqi/FJSFm2j2UnX9T4Ij4LKcv2HHrtKsMb8VlI
WbY70WtXIRbg05CyTOfTK1cppuLzkLJMp9ArVynabCE+ESnL8g82hF65inE8
PhMpy/Kj9LpVjlfou4AyiI/q3m8fTMTnImUZHkqvWkW5Bp+MlM32Z/SaVZbt
rAOfjpTN9HnbgV6zCjMbn4+UzXQWvWKVpsV+gk9IymZ5dXbCRX8Mt0X4lKRs
hottBL1eDthbXwWQCbrc9qBXywnvs5X4tKQs0i47nF4rR0y1HnxiUhZlj278
1cls/QogE7HHTqHXySEf1mcBMgG7bBq9Sk55vy3HpydlIz5vR9Br5Ji99FNB
0rGP6Wv+DTLCrsanKOVg/KkNp9cnAVpstm4ESGd22Czd9SuMbe1afKJS5vVG
vbpn4Xwg+2yKnquUA/moHUavSqKsZ1PtYXy+Uq7LP9pMW59ek6QZYkfbfHzO
Uq7tXTbF2uj1CMJOdpY9gk9cyppLbI69hV6JcLTaODvVfmbt+PxlTNvtOptt
Y/U+fijr2W52pJ1pl9oddr89ZkvxcyHTdGl2uu7PTtml2Wk70sbYUProN87/
A7jFu90=
      "], {{0, 512}, {512, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{512, 512},
    PlotRange->{{0, 512}, {0, 512}}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.77059941835511*^9, 3.770599498467435*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"d75da175-b133-47f8-bead-a8745225d3d6"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"123456\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.19230769230769232`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-0.5, 1.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"123456789\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08151602057822856],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-0.5, -135.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"password\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05274804346476146],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-68.5, -30.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"12345678\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.047340237474740594`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {63.5, -30.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"qwerty\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05392540835248411],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-58.5, -47.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"1234567\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04444653154842492],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {60.5, -47.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"qwertyuiop\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034423790504298925`],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-52.5, -66.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"12345678910\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02785702857066363],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {58.5, -62.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"12345\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04336797180869926],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {41.5, -76.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"monkey\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.033698823988769964`],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {58.5, 39.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"asdfghjkl\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030465503058240393`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-82.5, 40.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"basketball\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028268335549758616`],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-42.5, -81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"chocolate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028207877604434255`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {43.5, -89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"superman\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02907464873096455],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-0.5, 39.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dragon\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03361604091091684],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {80.5, 52.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"computer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03012194328028902],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-43.5, -93.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"whatever\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028051908968890024`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-81.5, 52.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"welcome\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028404273024458374`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {81.5, 63.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"zxcvbnm\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030805282428026683`],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {44.5, -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sunshine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029592321674386694`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-82.5, 64.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"diamond\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02792935656884659],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-80.5, 75.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"christian\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027862981462916016`],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {80.5, 74.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"freedom\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028250784165158537`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {84.5, -74.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"princess\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030101433315385836`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-43.5, -106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"jasmine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02804530576067729],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-86.5, -80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"baseball\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028958149271782786`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {80.5, 86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"butterfly\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028139037014917757`],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-108.5, -46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"phoenix\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027475064419405743`],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-77.5, 88.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"playboy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027502977981395928`],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {-102.5, -60.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rainbow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027721348363816314`],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {109.5, -50.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"asdfgh\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029264105065301915`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {84.5, -86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"shadow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02910394868082624],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {75.5, 97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"thunder\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027472527472527476`],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-72.5, 100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"heather\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02756655887259579],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {109.5, -62.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"slipknot\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027700366741183653`],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-86.5, -94.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"chicken\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027757801789241796`],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {70.5, 108.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"banana\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027788137956842495`],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {40.5, -113.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"batman\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028145461564899624`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-65.5, 113.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"1234\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03567619899531368],
     FontColor->RGBColor[1, 0.75, 0]], {-118.5, 0.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"mustang\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028107721800211923`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {88.5, -100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nothing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027540146039744865`],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {58.5, 122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nirvana\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02762262897177013],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {104.5, 38.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cheese\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02786635453031473],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {-55.5, 124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"arsenal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027973799590356306`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-83.5, -106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"football\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029731860899020676`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {77.5, -113.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"destiny\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027619706123113198`],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {16.5, 139.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hockey\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777237315455106],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-41.5, 134.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"forever\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028113260205368706`],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {51.5, 134.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mother\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028314672348515486`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-17.5, 144.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"zxcvbn\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028491751240618597`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-86.5, -118.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"qwertyui\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027581466115379077`],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-0.5, -152.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"monster\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027771215449215056`],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {19.5, 151.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"marina\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02814993516700046],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {56.5, 144.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"qwertyu\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027766598920529535`],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {93.5, -124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"school\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027905516414520107`],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-118.5, -11.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cookie\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02803479351037326],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {118.5, -23.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"buster\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028277540021812726`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {118.5, -35.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"purple\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028301337298163802`],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {117.5, -83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hunter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028429606761594884`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-51.5, 146.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"scooter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027617669419281347`],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {37.5, -152.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"snoopy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027922095898344282`],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-38.5, -151.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"prince\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027806596925255354`],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-115.5, -104.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"yellow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02787500873501778],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-15.5, 156.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"matrix\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027909039554832742`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-89.5, -129.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ginger\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027984690596109776`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-0.5, -163.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"martin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028022201678261967`],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {112.5, -111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"orange\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028044112323695122`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {92.5, -135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pepper\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02806971047501331],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {17.5, 162.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tennis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02754973641357764],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-84.5, -140.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bandit\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027643446228830394`],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {29.5, -164.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"junior\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028041182328708957`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-119.5, 29.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"family\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028066644699771683`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-31.5, -164.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"flower\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028198108572370616`],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-119.5, -72.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"peanut\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027831101688200653`],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {72.5, -151.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"summer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02820218198003431],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-19.5, 167.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bailey\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027853676942252624`],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-119.5, -90.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"golfer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02824513856506324],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-118.5, -116.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"jasper\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027557561644089477`],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-71.5, -150.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"money\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02757294054460225],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-62.5, -161.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"success\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027556203841534916`],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {64.5, -162.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"friend\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02754882168343561],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-119.5, -130.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"angel\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.027940855012584996`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {35.5, -174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"apple\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028319224560237898`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {104.5, -146.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lovely\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0286041844384659],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-114.5, -142.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"master\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028909175477538362`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {1.5, -175.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"victor\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02758208784602248],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {13.5, 172.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"silver\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02774357344773579],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-43.5, -174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"qwert\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02867759153236328],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-102.5, -154.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tinkle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030881197883485395`],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {64.5, -174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"secret\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028311234964153664`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-72.5, -171.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"music\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02749328041262463],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-41.5, 38.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hello\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028480124162953976`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {122.5, -95.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pretty\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02748967151636118],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {97.5, -160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"killer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02893919720665274],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-100.5, -168.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"soccer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028877131337250603`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {95.5, -172.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"123\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03400462970937517],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {123.5, 7.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"asdf\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02893229385261216],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-121.5, -23.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"love\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029145661804568353`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {50.5, 156.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"user\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028043033227980706`],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {123.5, -132.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"1\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02810870084731706],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-0.5, 14.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-182., 182.}, {-182., 182.}}]], "Output",
 CellChangeTimes->{3.770599494955686*^9, 3.770599538188295*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"98771edc-adae-470e-bf41-29294862fab4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 778},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, WindowSize -> {808, 678}, 
  WindowMargins -> {{4, Automatic}, {Automatic, 4}}, Visible -> False, 
  FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "ReverseColor.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Title"->{
  Cell[580, 22, 449, 6, 98, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd",
   CellTags->"Title"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Title", 577727, 11460}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 449, 6, 98, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd",
 CellTags->"Title"],
Cell[1032, 30, 427, 6, 35, "Text",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[CellGroupData[{
Cell[1484, 40, 378, 8, 105, "Section",ExpressionUUID->"a5891ba3-5b02-47cc-a4cb-91cdc60b69d7"],
Cell[1865, 50, 504, 9, 58, "Text",ExpressionUUID->"d7679580-e1df-41c0-baf3-435a0484516f"],
Cell[CellGroupData[{
Cell[2394, 63, 1209, 29, 73, "Input",ExpressionUUID->"8c18203f-f3dd-4649-bcce-6b334747f9bd"],
Cell[3606, 94, 52584, 1052, 585, "Output",ExpressionUUID->"affbc20f-1f05-4c53-b9ba-cb37a52a8f93"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56239, 1152, 163, 3, 67, "Section",ExpressionUUID->"2571f773-98ab-43bf-b43d-15d8687c1651"],
Cell[56405, 1157, 705, 12, 81, "Text",ExpressionUUID->"0f0e88ba-cbfb-4122-b300-4aeba7672b3e"],
Cell[CellGroupData[{
Cell[57135, 1173, 1075, 25, 178, "Input",ExpressionUUID->"2a356148-76a0-4ac3-998a-0c95570812b6"],
Cell[58213, 1200, 751, 19, 73, "Output",ExpressionUUID->"40d889f0-d6b4-4b67-8eb7-a721a2dae193"]
}, Open  ]],
Cell[58979, 1222, 954, 17, 81, "Text",ExpressionUUID->"440eaf1e-ab4e-4d46-911e-a158414268e2"],
Cell[CellGroupData[{
Cell[59958, 1243, 332, 6, 30, "Input",ExpressionUUID->"c4f059a6-1e24-41ed-9f1e-4b81f9493c47"],
Cell[60293, 1251, 241, 3, 34, "Output",ExpressionUUID->"7d216dd0-8840-4677-9a42-4e1f02a22fa0"]
}, Open  ]],
Cell[60549, 1257, 675, 12, 58, "Text",ExpressionUUID->"a3f941ec-baeb-4ddc-bf4a-631fe377b6f1"],
Cell[61227, 1271, 234, 4, 35, "Text",ExpressionUUID->"b60c090c-3139-4eaf-9fb1-930487346684"],
Cell[CellGroupData[{
Cell[61486, 1279, 1869, 38, 157, "Input",ExpressionUUID->"f6acc7ea-7a54-43a3-91d8-1b29c7dd2bd2"],
Cell[63358, 1319, 907, 23, 73, "Output",ExpressionUUID->"b7cc634e-2f5b-434f-ae5f-17af38cd6d81"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64314, 1348, 163, 3, 67, "Section",ExpressionUUID->"04ad1cb8-c08f-425e-aa40-50ce70ce3953"],
Cell[64480, 1353, 817, 15, 81, "Text",ExpressionUUID->"3bf51dd4-e70b-4c66-a3ee-5ed1d5f6bb8a"],
Cell[CellGroupData[{
Cell[65322, 1372, 286, 6, 30, "Input",ExpressionUUID->"1ab59e0d-6d21-4bef-9d3f-002c4b7e8541"],
Cell[65611, 1380, 97672, 2083, 563, "Output",ExpressionUUID->"2757c7c1-a460-4434-8fb7-ad830224b8e2"]
}, Open  ]],
Cell[163298, 3466, 359, 6, 35, "Text",ExpressionUUID->"acd75588-c93f-4b0d-ad33-f3c0ab031196"],
Cell[CellGroupData[{
Cell[163682, 3476, 1194, 24, 52, "Input",ExpressionUUID->"afefa9c4-cdc6-417a-b145-83e038410b79"],
Cell[164879, 3502, 52105, 1028, 585, "Output",ExpressionUUID->"63fe5c02-8223-4b5a-9c24-c517eab7fd59"]
}, Open  ]],
Cell[216999, 4533, 772, 15, 58, "Text",ExpressionUUID->"a5b80379-22d0-4197-b0da-7a7fc9755ee4"],
Cell[CellGroupData[{
Cell[217796, 4552, 807, 18, 52, "Input",ExpressionUUID->"f82791ff-77a2-4522-891d-413e59aa07b4"],
Cell[218606, 4572, 59944, 1179, 585, "Output",ExpressionUUID->"2d1d53d2-fe6d-45bd-a040-bf3a2da38303"]
}, Open  ]],
Cell[278565, 5754, 359, 8, 35, "Text",ExpressionUUID->"c9c88dd1-5a72-49db-af33-82154a1eb36e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278961, 5767, 161, 3, 67, "Section",ExpressionUUID->"9c4f90df-364e-4f26-8062-ea64adc05428"],
Cell[279125, 5772, 1144, 20, 81, "Text",ExpressionUUID->"09ad4a52-4eb6-4a09-a087-561d02d21368"],
Cell[280272, 5794, 790, 14, 58, "Text",ExpressionUUID->"9a7341f9-3007-4272-9fc0-bbac82bdb42f"],
Cell[CellGroupData[{
Cell[281087, 5812, 877, 21, 52, "Input",ExpressionUUID->"a4d84ebc-a9bd-482b-b3c1-f62064a0a852"],
Cell[281967, 5835, 201521, 3480, 371, 23952, 568, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"be10ad03-82bc-4630-807c-6c1b3d4818c4"]
}, Open  ]],
Cell[483503, 9318, 284, 7, 35, "Text",ExpressionUUID->"5640cdf1-79ae-4a25-b5e1-792cdea4621c"],
Cell[CellGroupData[{
Cell[483812, 9329, 10730, 188, 156, "Input",ExpressionUUID->"32c6307c-bc63-4acf-a6df-2b48cdb3eca3"],
Cell[494545, 9519, 24467, 572, 377, "Output",ExpressionUUID->"80a1b605-4430-4a12-8b48-de88b940836f"]
}, Open  ]],
Cell[519027, 10094, 244, 6, 35, "Text",ExpressionUUID->"b5aae6e5-335d-4134-979f-f0d74ed7c981"],
Cell[CellGroupData[{
Cell[519296, 10104, 794, 18, 61, "Input",ExpressionUUID->"410025a1-d7c3-47c3-bd98-e550c06a6538"],
Cell[520093, 10124, 2406, 55, 205, "Output",ExpressionUUID->"da0fff7c-c1d0-429e-b3e1-0636497ca9f3"]
}, Open  ]],
Cell[522514, 10182, 170, 3, 35, "Text",ExpressionUUID->"579244b4-7d7f-4047-97f4-93fdb037ec99"],
Cell[CellGroupData[{
Cell[522709, 10189, 716, 18, 52, "Input",ExpressionUUID->"1203aaf9-8c3b-4b6a-8a7d-5237fe943045"],
Cell[523428, 10209, 2874, 68, 243, "Output",ExpressionUUID->"25ed2a1b-5fa8-4d50-8ad9-75adaf5513f5"]
}, Open  ]],
Cell[526317, 10280, 164, 3, 35, "Text",ExpressionUUID->"513ada30-5546-4454-8db4-8ff6b264bd15"],
Cell[CellGroupData[{
Cell[526506, 10287, 1005, 26, 52, "Input",ExpressionUUID->"d0affbc7-55e4-4b6f-9baf-019dd6c1b8df"],
Cell[527514, 10315, 5336, 127, 366, "Output",ExpressionUUID->"9dddfa7e-598d-4f54-8e76-7661c6f3bbed"]
}, Open  ]],
Cell[532865, 10445, 323, 5, 30, "Input",ExpressionUUID->"ba2a7cce-4080-487f-8765-15d513971aa5"],
Cell[CellGroupData[{
Cell[533213, 10454, 831, 21, 94, "Input",ExpressionUUID->"ad3298b0-b499-43f6-97f2-81d7cf2a5625"],
Cell[534047, 10477, 397, 9, 24, "Message",ExpressionUUID->"1e63593c-54e4-4653-ab2a-ae89fbf720af"],
Cell[534447, 10488, 397, 9, 24, "Message",ExpressionUUID->"a3788fab-91a4-4b2b-82ee-d14e880953b8"],
Cell[534847, 10499, 397, 9, 24, "Message",ExpressionUUID->"811f714c-792d-4f31-b1ca-73afa15cc36e"],
Cell[535247, 10510, 478, 10, 24, "Message",ExpressionUUID->"951c94a0-6a98-4216-b289-5e7cf618bf7e"],
Cell[535728, 10522, 5963, 144, 299, "Output",ExpressionUUID->"f212dff3-f80b-474f-8af9-5dd77bc3db0d"]
}, Open  ]],
Cell[541706, 10669, 290, 7, 35, "Text",ExpressionUUID->"3d214afc-ff5e-419c-b572-473f1988d871"],
Cell[CellGroupData[{
Cell[542021, 10680, 10232, 175, 135, "Input",ExpressionUUID->"d75da175-b133-47f8-bead-a8745225d3d6"],
Cell[552256, 10857, 24408, 571, 411, "Output",ExpressionUUID->"98771edc-adae-470e-bf41-29294862fab4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

